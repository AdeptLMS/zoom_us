=begin
#Zoom API

#The Zoom API allows developers to safely and securely access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials). All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.

OpenAPI spec version: 2.0.0
Contact: developersupport@zoom.us
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.12

=end

require 'uri'

module ZoomUs
  class Phone
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get Account's Call Logs
    # Retrieve [call logs](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-Call-Logs) for an account.   **Scopes**: `phone:read:admin`<br> <br> **Prerequisite:**<br> 1. Business or Enterprise account<br> 2. A Zoom Phone license<br> 3. Account Owner and a [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) with Zoom Phone Management<br>
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page_size The number of records returned within a single API call. (default to 30)
    # @option opts [Integer] :page_number The current page number of returned records. (default to 1)
    # @option opts [String] :from Start date from which you would like to get the call logs. The start date should be within past six months.
    # @option opts [String] :to The end date upto which you would like to get the call logs for. The end date should be within past six months.
    # @option opts [String] :type The type of the call logs. The value can be either \&quot;all\&quot; or \&quot;missed\&quot;.
    # @return [InlineResponse20066]
    def account_call_logs(opts = {})
      data, _status_code, _headers = account_call_logs_with_http_info(opts)
      data
    end

    # Get Account&#39;s Call Logs
    # Retrieve [call logs](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-Call-Logs) for an account.   **Scopes**: &#x60;phone:read:admin&#x60;&lt;br&gt; &lt;br&gt; **Prerequisite:**&lt;br&gt; 1. Business or Enterprise account&lt;br&gt; 2. A Zoom Phone license&lt;br&gt; 3. Account Owner and a [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) with Zoom Phone Management&lt;br&gt;
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page_size The number of records returned within a single API call.
    # @option opts [Integer] :page_number The current page number of returned records.
    # @option opts [String] :from Start date from which you would like to get the call logs. The start date should be within past six months.
    # @option opts [String] :to The end date upto which you would like to get the call logs for. The end date should be within past six months.
    # @option opts [String] :type The type of the call logs. The value can be either \&quot;all\&quot; or \&quot;missed\&quot;.
    # @return [Array<(InlineResponse20066, Fixnum, Hash)>] InlineResponse20066 data, response status code and response headers
    def account_call_logs_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneApi.account_call_logs ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 300
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PhoneApi.account_call_logs, must be smaller than or equal to 300.'
      end

      # resource path
      local_var_path = '/phone/call_logs'

      # query parameters
      query_params = {}
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'page_number'] = opts[:'page_number'] if !opts[:'page_number'].nil?
      query_params[:'from'] = opts[:'from'] if !opts[:'from'].nil?
      query_params[:'to'] = opts[:'to'] if !opts[:'to'].nil?
      query_params[:'type'] = opts[:'type'] if !opts[:'type'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse20066')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneApi#account_call_logs\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Assign Calling Plan to a User
    # Assign [calling plan](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) to a [Zoom Phone](https://support.zoom.us/hc/en-us/categories/360001370051-Zoom-Phone) user.  **Scopes**: `phone:write` `phone:write:admin`<br> <br> **Prerequisite:**  1. Business or Enterprise account 2. A Zoom Phone license
    # @param user_id
    # @param [Hash] opts the optional parameters
    # @option opts [Body47] :body
    # @return [Object]
    def assign_calling_plan(user_id, opts = {})
      data, _status_code, _headers = assign_calling_plan_with_http_info(user_id, opts)
      data
    end

    # Assign Calling Plan to a User
    # Assign [calling plan](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) to a [Zoom Phone](https://support.zoom.us/hc/en-us/categories/360001370051-Zoom-Phone) user.  **Scopes**: &#x60;phone:write&#x60; &#x60;phone:write:admin&#x60;&lt;br&gt; &lt;br&gt; **Prerequisite:**  1. Business or Enterprise account 2. A Zoom Phone license
    # @param user_id
    # @param [Hash] opts the optional parameters
    # @option opts [Body47] :body
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def assign_calling_plan_with_http_info(user_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneApi.assign_calling_plan ...'
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling PhoneApi.assign_calling_plan"
      end
      # resource path
      local_var_path = '/phone/users/{userId}/calling_plans'.sub('{' + 'userId' + '}', user_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneApi#assign_calling_plan\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Assign Phone Number to User
    # Assign a [phone number](https://support.zoom.us/hc/en-us/articles/360020808292-Managing-Phone-Numbers) to a user who has already enabled Zoom Phone.   **Scopes**: `phone:write` `phone:write:admin`<br> <br> **Prerequisite:**  1. Business or Enterprise account 2. A Zoom Phone license
    # @param user_id
    # @param [Hash] opts the optional parameters
    # @option opts [Body46] :body Provide either an id or a number in the request body.
    # @return [InlineResponse20067]
    def assign_phone_number(user_id, opts = {})
      data, _status_code, _headers = assign_phone_number_with_http_info(user_id, opts)
      data
    end

    # Assign Phone Number to User
    # Assign a [phone number](https://support.zoom.us/hc/en-us/articles/360020808292-Managing-Phone-Numbers) to a user who has already enabled Zoom Phone.   **Scopes**: &#x60;phone:write&#x60; &#x60;phone:write:admin&#x60;&lt;br&gt; &lt;br&gt; **Prerequisite:**  1. Business or Enterprise account 2. A Zoom Phone license
    # @param user_id
    # @param [Hash] opts the optional parameters
    # @option opts [Body46] :body Provide either an id or a number in the request body.
    # @return [Array<(InlineResponse20067, Fixnum, Hash)>] InlineResponse20067 data, response status code and response headers
    def assign_phone_number_with_http_info(user_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneApi.assign_phone_number ...'
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling PhoneApi.assign_phone_number"
      end
      # resource path
      local_var_path = '/phone/users/{userId}/phone_numbers'.sub('{' + 'userId' + '}', user_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse20067')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneApi#assign_phone_number\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Change Main Company Number
    # The [main company number](https://support.zoom.us/hc/en-us/articles/360028553691) can be used by external callers to reach your phone users (by dialing the main company number and the user's extension). It can also be used by phone users in your account as their caller ID while making calls.<br><br> Use this API to [change the main company number](https://support.zoom.us/hc/en-us/articles/360028553691#h_82414c34-9df2-428a-85a4-efcf7f9e0d72) of an account.<br><br> **Prerequisites:**<br> * Pro or higher account plan. * Account owner or admin permissions<br> **Scopes:** `phone:write:admin`<br>
    # @param [Hash] opts the optional parameters
    # @option opts [Body71] :body
    # @return [Object]
    def change_main_company_number(opts = {})
      data, _status_code, _headers = change_main_company_number_with_http_info(opts)
      data
    end

    # Change Main Company Number
    # The [main company number](https://support.zoom.us/hc/en-us/articles/360028553691) can be used by external callers to reach your phone users (by dialing the main company number and the user&#39;s extension). It can also be used by phone users in your account as their caller ID while making calls.&lt;br&gt;&lt;br&gt; Use this API to [change the main company number](https://support.zoom.us/hc/en-us/articles/360028553691#h_82414c34-9df2-428a-85a4-efcf7f9e0d72) of an account.&lt;br&gt;&lt;br&gt; **Prerequisites:**&lt;br&gt; * Pro or higher account plan. * Account owner or admin permissions&lt;br&gt; **Scopes:** &#x60;phone:write:admin&#x60;&lt;br&gt;
    # @param [Hash] opts the optional parameters
    # @option opts [Body71] :body
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def change_main_company_number_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneApi.change_main_company_number ...'
      end
      # resource path
      local_var_path = '/phone/company_number'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneApi#change_main_company_number\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Phone Number Details
    # A Zoom account owner or admin can purchase phone numbers and assign them to Zoom phone users. Use this API to get details on a specific Phone number in a Zoom account.<br><br> **Prerequisites:**<br> * Pro or higher plan with Zoom phone license<br> **Scope:** `phone:read:admin`<br>
    # @param number_id Unique Identifier of the Phone Number. This can be retrieved from the List Phone Numbers API.
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse20092]
    def get_phone_number_details(number_id, opts = {})
      data, _status_code, _headers = get_phone_number_details_with_http_info(number_id, opts)
      data
    end

    # Get Phone Number Details
    # A Zoom account owner or admin can purchase phone numbers and assign them to Zoom phone users. Use this API to get details on a specific Phone number in a Zoom account.&lt;br&gt;&lt;br&gt; **Prerequisites:**&lt;br&gt; * Pro or higher plan with Zoom phone license&lt;br&gt; **Scope:** &#x60;phone:read:admin&#x60;&lt;br&gt;
    # @param number_id Unique Identifier of the Phone Number. This can be retrieved from the List Phone Numbers API.
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse20092, Fixnum, Hash)>] InlineResponse20092 data, response status code and response headers
    def get_phone_number_details_with_http_info(number_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneApi.get_phone_number_details ...'
      end
      # verify the required parameter 'number_id' is set
      if @api_client.config.client_side_validation && number_id.nil?
        fail ArgumentError, "Missing the required parameter 'number_id' when calling PhoneApi.get_phone_number_details"
      end
      # resource path
      local_var_path = '/phone/numbers/{numberId}'.sub('{' + 'numberId' + '}', number_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse20092')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneApi#get_phone_number_details\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Phone Numbers
    # A Zoom account owner or admin can purchase phone numbers and assign them to Zoom phone users. Use this API to list all Zoom Phone numbers in a Zoom account. You can filter the response based on your needs by using query parameters.  **Prerequisites:**<br> * Pro or higher plan with Zoom phone license<br> **Scope:** `phone:read:admin`<br>
    # @param [Hash] opts the optional parameters
    # @option opts [String] :next_page_token The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
    # @option opts [String] :type Query response by number assignment. The value can be one of the following:&lt;br&gt; &#x60;assigned&#x60;: The number has been assigned to either a user, a call queue, an auto-receptionist or a common area phone in an account. &lt;br&gt;&#x60;unassigned&#x60;: The number is not assigned to anyone.&lt;br&gt;  &#x60;all&#x60;: Include both assigned and unassigned numbers in the response.
    # @option opts [String] :extension_type The type of assignee to whom the number is assigned. The value can be one of the following:&lt;br&gt; &#x60;user&#x60;&lt;br&gt; &#x60;callQueue&#x60;&lt;br&gt; &#x60;autoReceptionist&#x60;&lt;br&gt; &#x60;commonAreaPhone&#x60;
    # @option opts [Integer] :page_size The number of records returned within a single API call. (default to 30)
    # @option opts [String] :number_type The type of phone number. The value can be either &#x60;toll&#x60; or &#x60;tollfree&#x60;.
    # @option opts [BOOLEAN] :pending_numbers Include or exclude pending numbers in the response. The value can be either &#x60;true&#x60; or &#x60;false&#x60;.
    # @return [InlineResponse200]
    def list_account_phone_numbers(opts = {})
      data, _status_code, _headers = list_account_phone_numbers_with_http_info(opts)
      data
    end

    # List Phone Numbers
    # A Zoom account owner or admin can purchase phone numbers and assign them to Zoom phone users. Use this API to list all Zoom Phone numbers in a Zoom account. You can filter the response based on your needs by using query parameters.  **Prerequisites:**&lt;br&gt; * Pro or higher plan with Zoom phone license&lt;br&gt; **Scope:** &#x60;phone:read:admin&#x60;&lt;br&gt;
    # @param [Hash] opts the optional parameters
    # @option opts [String] :next_page_token The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
    # @option opts [String] :type Query response by number assignment. The value can be one of the following:&lt;br&gt; &#x60;assigned&#x60;: The number has been assigned to either a user, a call queue, an auto-receptionist or a common area phone in an account. &lt;br&gt;&#x60;unassigned&#x60;: The number is not assigned to anyone.&lt;br&gt;  &#x60;all&#x60;: Include both assigned and unassigned numbers in the response.
    # @option opts [String] :extension_type The type of assignee to whom the number is assigned. The value can be one of the following:&lt;br&gt; &#x60;user&#x60;&lt;br&gt; &#x60;callQueue&#x60;&lt;br&gt; &#x60;autoReceptionist&#x60;&lt;br&gt; &#x60;commonAreaPhone&#x60;
    # @option opts [Integer] :page_size The number of records returned within a single API call.
    # @option opts [String] :number_type The type of phone number. The value can be either &#x60;toll&#x60; or &#x60;tollfree&#x60;.
    # @option opts [BOOLEAN] :pending_numbers Include or exclude pending numbers in the response. The value can be either &#x60;true&#x60; or &#x60;false&#x60;.
    # @return [Array<(InlineResponse200, Fixnum, Hash)>] InlineResponse200 data, response status code and response headers
    def list_account_phone_numbers_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneApi.list_account_phone_numbers ...'
      end
      if @api_client.config.client_side_validation && opts[:'type'] && !['assigned', 'unassigned', 'all'].include?(opts[:'type'])
        fail ArgumentError, 'invalid value for "type", must be one of assigned, unassigned, all'
      end
      if @api_client.config.client_side_validation && opts[:'extension_type'] && !['user', 'callQueue', 'autoReceptionist', 'commonAreaPhone'].include?(opts[:'extension_type'])
        fail ArgumentError, 'invalid value for "extension_type", must be one of user, callQueue, autoReceptionist, commonAreaPhone'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 100
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PhoneApi.list_account_phone_numbers, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && opts[:'number_type'] && !['toll', 'tollfree'].include?(opts[:'number_type'])
        fail ArgumentError, 'invalid value for "number_type", must be one of toll, tollfree'
      end
      # resource path
      local_var_path = '/phone/numbers'

      # query parameters
      query_params = {}
      query_params[:'next_page_token'] = opts[:'next_page_token'] if !opts[:'next_page_token'].nil?
      query_params[:'type'] = opts[:'type'] if !opts[:'type'].nil?
      query_params[:'extension_type'] = opts[:'extension_type'] if !opts[:'extension_type'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'number_type'] = opts[:'number_type'] if !opts[:'number_type'].nil?
      query_params[:'pending_numbers'] = opts[:'pending_numbers'] if !opts[:'pending_numbers'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse200')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneApi#list_account_phone_numbers\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Calling Plans
    # List all Zoom Phone [calling plans](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) that are enabled for a Zoom account.<br><br> **Prerequisites:**<br> * Pro or a higher account with Zoom phone license. <br> **Scope:** `phone:read:admin`<br>
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse20093]
    def list_calling_plans(opts = {})
      data, _status_code, _headers = list_calling_plans_with_http_info(opts)
      data
    end

    # List Calling Plans
    # List all Zoom Phone [calling plans](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) that are enabled for a Zoom account.&lt;br&gt;&lt;br&gt; **Prerequisites:**&lt;br&gt; * Pro or a higher account with Zoom phone license. &lt;br&gt; **Scope:** &#x60;phone:read:admin&#x60;&lt;br&gt;
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse20093, Fixnum, Hash)>] InlineResponse20093 data, response status code and response headers
    def list_calling_plans_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneApi.list_calling_plans ...'
      end
      # resource path
      local_var_path = '/phone/calling_plans'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse20093')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneApi#list_calling_plans\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Phone Users
    # List all the users on an account who have been assigned Zoom Phone licenses.<br><br> **Prerequisites:**<br> * Pro or higher plan with Zoom phone license<br> **Scope:** `phone:read:admin`<br>
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page_size The number of records returned from a single API call. (default to 30)
    # @option opts [String] :next_page_token The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
    # @option opts [String] :site_id Unique Identifier of the site. This can be retrieved from List Phone Sites API.
    # @return [InlineResponse20094]
    def list_phone_users(opts = {})
      data, _status_code, _headers = list_phone_users_with_http_info(opts)
      data
    end

    # List Phone Users
    # List all the users on an account who have been assigned Zoom Phone licenses.&lt;br&gt;&lt;br&gt; **Prerequisites:**&lt;br&gt; * Pro or higher plan with Zoom phone license&lt;br&gt; **Scope:** &#x60;phone:read:admin&#x60;&lt;br&gt;
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page_size The number of records returned from a single API call.
    # @option opts [String] :next_page_token The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
    # @option opts [String] :site_id Unique Identifier of the site. This can be retrieved from List Phone Sites API.
    # @return [Array<(InlineResponse20094, Fixnum, Hash)>] InlineResponse20094 data, response status code and response headers
    def list_phone_users_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneApi.list_phone_users ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 100
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PhoneApi.list_phone_users, must be smaller than or equal to 100.'
      end

      # resource path
      local_var_path = '/phone/users'

      # query parameters
      query_params = {}
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'next_page_token'] = opts[:'next_page_token'] if !opts[:'next_page_token'].nil?
      query_params[:'site_id'] = opts[:'site_id'] if !opts[:'site_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse20094')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneApi#list_phone_users\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get User's Profile
    # Retrieve a user's [zoom phone](https://support.zoom.us/hc/en-us/articles/360001297663-Quickstart-Guide-for-Zoom-Phone-Administrators) profile.  **Scopes:** `phone:read`, `phone:read:admin`<br>    **Prerequisites** : 1. Business or Enterprise account  2. A Zoom Phone license
    # @param user_id The user ID or email address of the user. For user-level apps, pass &#x60;me&#x60; as the value for userId.
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse20061]
    def phone_user(user_id, opts = {})
      data, _status_code, _headers = phone_user_with_http_info(user_id, opts)
      data
    end

    # Get User&#39;s Profile
    # Retrieve a user&#39;s [zoom phone](https://support.zoom.us/hc/en-us/articles/360001297663-Quickstart-Guide-for-Zoom-Phone-Administrators) profile.  **Scopes:** &#x60;phone:read&#x60;, &#x60;phone:read:admin&#x60;&lt;br&gt;    **Prerequisites** : 1. Business or Enterprise account  2. A Zoom Phone license
    # @param user_id The user ID or email address of the user. For user-level apps, pass &#x60;me&#x60; as the value for userId.
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse20061, Fixnum, Hash)>] InlineResponse20061 data, response status code and response headers
    def phone_user_with_http_info(user_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneApi.phone_user ...'
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling PhoneApi.phone_user"
      end
      # resource path
      local_var_path = '/phone/users/{userId}'.sub('{' + 'userId' + '}', user_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse20061')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneApi#phone_user\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get User's Call Logs
    # Retrieve a [zoom phone](https://support.zoom.us/hc/en-us/articles/360001297663-Quickstart-Guide-for-Zoom-Phone-Administrators) user's call logs.  **Scopes:** `phone:read`, `phone:read:admin`<br> <br> **Prerequisite:**  1. Business or Enterprise account 2. A Zoom Phone license
    # @param user_id The user ID or email address of the user. For user-level apps, pass &#x60;me&#x60; as the value for userId.
    # @param from Start date in &#39;yyyy-mm-dd&#39; format. The date range defined by the \&quot;from\&quot; and \&quot;to\&quot; parameters should only be one month as the report includes only one month worth of data at once.
    # @param to End date.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page_size The number of records returned within a single API call. (default to 30)
    # @option opts [Integer] :page_number The current page number of returned records. (default to 1)
    # @option opts [String] :type
    # @return [InlineResponse20063]
    def phone_user_call_logs(user_id, from, to, opts = {})
      data, _status_code, _headers = phone_user_call_logs_with_http_info(user_id, from, to, opts)
      data
    end

    # Get User&#39;s Call Logs
    # Retrieve a [zoom phone](https://support.zoom.us/hc/en-us/articles/360001297663-Quickstart-Guide-for-Zoom-Phone-Administrators) user&#39;s call logs.  **Scopes:** &#x60;phone:read&#x60;, &#x60;phone:read:admin&#x60;&lt;br&gt; &lt;br&gt; **Prerequisite:**  1. Business or Enterprise account 2. A Zoom Phone license
    # @param user_id The user ID or email address of the user. For user-level apps, pass &#x60;me&#x60; as the value for userId.
    # @param from Start date in &#39;yyyy-mm-dd&#39; format. The date range defined by the \&quot;from\&quot; and \&quot;to\&quot; parameters should only be one month as the report includes only one month worth of data at once.
    # @param to End date.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page_size The number of records returned within a single API call.
    # @option opts [Integer] :page_number The current page number of returned records.
    # @option opts [String] :type
    # @return [Array<(InlineResponse20063, Fixnum, Hash)>] InlineResponse20063 data, response status code and response headers
    def phone_user_call_logs_with_http_info(user_id, from, to, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneApi.phone_user_call_logs ...'
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling PhoneApi.phone_user_call_logs"
      end
      # verify the required parameter 'from' is set
      if @api_client.config.client_side_validation && from.nil?
        fail ArgumentError, "Missing the required parameter 'from' when calling PhoneApi.phone_user_call_logs"
      end
      # verify the required parameter 'to' is set
      if @api_client.config.client_side_validation && to.nil?
        fail ArgumentError, "Missing the required parameter 'to' when calling PhoneApi.phone_user_call_logs"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 300
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PhoneApi.phone_user_call_logs, must be smaller than or equal to 300.'
      end

      if @api_client.config.client_side_validation && opts[:'type'] && !['all', 'missed'].include?(opts[:'type'])
        fail ArgumentError, 'invalid value for "type", must be one of all, missed'
      end
      # resource path
      local_var_path = '/phone/users/{userId}/call_logs'.sub('{' + 'userId' + '}', user_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'from'] = from
      query_params[:'to'] = to
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'page_number'] = opts[:'page_number'] if !opts[:'page_number'].nil?
      query_params[:'type'] = opts[:'type'] if !opts[:'type'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse20063')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneApi#phone_user_call_logs\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get User's Recordings
    # Retrieve a user's zoom [phone recordings](https://support.zoom.us/hc/en-us/articles/360021336671-Viewing-Call-History-and-Recordings). **Scopes:** `phone:read`, `phone:read:admin`<br>  <br> **Prerequisite:** 1. Business or Enterprise account 2. A Zoom Phone license
    # @param user_id The user ID or email address of the user. For user-level apps, pass &#x60;me&#x60; as the value for userId.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page_size The number of records returned within a single API call. (default to 30)
    # @option opts [Integer] :page_number The current page number of returned records. (default to 1)
    # @return [InlineResponse20064]
    def phone_user_recordings(user_id, opts = {})
      data, _status_code, _headers = phone_user_recordings_with_http_info(user_id, opts)
      data
    end

    # Get User&#39;s Recordings
    # Retrieve a user&#39;s zoom [phone recordings](https://support.zoom.us/hc/en-us/articles/360021336671-Viewing-Call-History-and-Recordings). **Scopes:** &#x60;phone:read&#x60;, &#x60;phone:read:admin&#x60;&lt;br&gt;  &lt;br&gt; **Prerequisite:** 1. Business or Enterprise account 2. A Zoom Phone license
    # @param user_id The user ID or email address of the user. For user-level apps, pass &#x60;me&#x60; as the value for userId.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page_size The number of records returned within a single API call.
    # @option opts [Integer] :page_number The current page number of returned records.
    # @return [Array<(InlineResponse20064, Fixnum, Hash)>] InlineResponse20064 data, response status code and response headers
    def phone_user_recordings_with_http_info(user_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneApi.phone_user_recordings ...'
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling PhoneApi.phone_user_recordings"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 300
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PhoneApi.phone_user_recordings, must be smaller than or equal to 300.'
      end

      # resource path
      local_var_path = '/phone/users/{userId}/recordings'.sub('{' + 'userId' + '}', user_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'page_number'] = opts[:'page_number'] if !opts[:'page_number'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse20064')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneApi#phone_user_recordings\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get User's Settings
    # Retrieve a user's zoom phone profile [settings](https://support.zoom.us/hc/en-us/articles/360021325712-Configuring-Settings).  **Scopes:** `phone:read`, `phone:read:admin`<br> <br> **Prerequisite:** 1. Business or Enterprise account 2. A Zoom Phone license
    # @param user_id The user ID or email address of the user. For user-level apps, pass &#x60;me&#x60; as the value for userId.
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse20062]
    def phone_user_settings(user_id, opts = {})
      data, _status_code, _headers = phone_user_settings_with_http_info(user_id, opts)
      data
    end

    # Get User&#39;s Settings
    # Retrieve a user&#39;s zoom phone profile [settings](https://support.zoom.us/hc/en-us/articles/360021325712-Configuring-Settings).  **Scopes:** &#x60;phone:read&#x60;, &#x60;phone:read:admin&#x60;&lt;br&gt; &lt;br&gt; **Prerequisite:** 1. Business or Enterprise account 2. A Zoom Phone license
    # @param user_id The user ID or email address of the user. For user-level apps, pass &#x60;me&#x60; as the value for userId.
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse20062, Fixnum, Hash)>] InlineResponse20062 data, response status code and response headers
    def phone_user_settings_with_http_info(user_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneApi.phone_user_settings ...'
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling PhoneApi.phone_user_settings"
      end
      # resource path
      local_var_path = '/phone/users/{userId}/settings'.sub('{' + 'userId' + '}', user_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse20062')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneApi#phone_user_settings\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get User's Voicemails
    # Retrieve a user's Zoom Phone voicemails.   **Scopes:** `phone:read`, `phone:read:admin`<br> <br> **Prerequisite:** 1. Business or Enterprise account 2. A Zoom Phone license
    # @param user_id The user ID or email address of the user. For user-level apps, pass &#x60;me&#x60; as the value for userId.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page_size The number of records returned within a single API call. (default to 30)
    # @option opts [Integer] :page_number The current page number of returned records. (default to 1)
    # @option opts [String] :status Status of the voice mail (default to all)
    # @return [InlineResponse20065]
    def phone_user_voice_mails(user_id, opts = {})
      data, _status_code, _headers = phone_user_voice_mails_with_http_info(user_id, opts)
      data
    end

    # Get User&#39;s Voicemails
    # Retrieve a user&#39;s Zoom Phone voicemails.   **Scopes:** &#x60;phone:read&#x60;, &#x60;phone:read:admin&#x60;&lt;br&gt; &lt;br&gt; **Prerequisite:** 1. Business or Enterprise account 2. A Zoom Phone license
    # @param user_id The user ID or email address of the user. For user-level apps, pass &#x60;me&#x60; as the value for userId.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page_size The number of records returned within a single API call.
    # @option opts [Integer] :page_number The current page number of returned records.
    # @option opts [String] :status Status of the voice mail
    # @return [Array<(InlineResponse20065, Fixnum, Hash)>] InlineResponse20065 data, response status code and response headers
    def phone_user_voice_mails_with_http_info(user_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneApi.phone_user_voice_mails ...'
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling PhoneApi.phone_user_voice_mails"
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 300
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PhoneApi.phone_user_voice_mails, must be smaller than or equal to 300.'
      end

      if @api_client.config.client_side_validation && opts[:'status'] && !['all', 'read', 'unread'].include?(opts[:'status'])
        fail ArgumentError, 'invalid value for "status", must be one of all, read, unread'
      end
      # resource path
      local_var_path = '/phone/users/{userId}/voice_mails'.sub('{' + 'userId' + '}', user_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'page_number'] = opts[:'page_number'] if !opts[:'page_number'].nil?
      query_params[:'status'] = opts[:'status'] if !opts[:'status'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse20065')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneApi#phone_user_voice_mails\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Unassign User's Calling Plan
    # Unassign a [calling plan](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) that was previously assigned to a [Zoom Phone](https://support.zoom.us/hc/en-us/categories/360001370051) user.  **Scopes**: `phone:write` `phone:write:admin`<br> <br> **Prerequisite:**  1. Business or Enterprise account 2. A Zoom Phone license
    # @param user_id
    # @param type The [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan that was assigned to user. (e.g: The value of type would be \&quot;200\&quot; for Unlimited US/Canada calling plan.)
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def unassign_calling_plan(user_id, type, opts = {})
      data, _status_code, _headers = unassign_calling_plan_with_http_info(user_id, type, opts)
      data
    end

    # Unassign User&#39;s Calling Plan
    # Unassign a [calling plan](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) that was previously assigned to a [Zoom Phone](https://support.zoom.us/hc/en-us/categories/360001370051) user.  **Scopes**: &#x60;phone:write&#x60; &#x60;phone:write:admin&#x60;&lt;br&gt; &lt;br&gt; **Prerequisite:**  1. Business or Enterprise account 2. A Zoom Phone license
    # @param user_id
    # @param type The [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan that was assigned to user. (e.g: The value of type would be \&quot;200\&quot; for Unlimited US/Canada calling plan.)
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def unassign_calling_plan_with_http_info(user_id, type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneApi.unassign_calling_plan ...'
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling PhoneApi.unassign_calling_plan"
      end
      # verify the required parameter 'type' is set
      if @api_client.config.client_side_validation && type.nil?
        fail ArgumentError, "Missing the required parameter 'type' when calling PhoneApi.unassign_calling_plan"
      end
      # resource path
      local_var_path = '/phone/users/{userId}/calling_plans/{type}'.sub('{' + 'userId' + '}', user_id.to_s).sub('{' + 'type' + '}', type.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneApi#unassign_calling_plan\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Unassign User's Phone Number
    # Unassign [phone number](https://support.zoom.us/hc/en-us/articles/360020808292-Managing-Phone-Numbers#h_38ba8b01-26e3-4b1b-a9b5-0717c00a7ca6) of a Zoom phone user. <br>  After assigning a phone number, you can remove it if you don't want it to be assigned to anyone.  **Scopes**: `phone:write` `phone:write:admin`<br> <br> **Prerequisite:**  1. Business or Enterprise account 2. A Zoom Phone license 3. User must have been previously assigned a Zoom Phone number.
    # @param user_id Provide either userId or email address of the user.
    # @param phone_number_id Provide either phone number or phoneNumberId of the user.
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def unassign_phone_number(user_id, phone_number_id, opts = {})
      data, _status_code, _headers = unassign_phone_number_with_http_info(user_id, phone_number_id, opts)
      data
    end

    # Unassign User&#39;s Phone Number
    # Unassign [phone number](https://support.zoom.us/hc/en-us/articles/360020808292-Managing-Phone-Numbers#h_38ba8b01-26e3-4b1b-a9b5-0717c00a7ca6) of a Zoom phone user. &lt;br&gt;  After assigning a phone number, you can remove it if you don&#39;t want it to be assigned to anyone.  **Scopes**: &#x60;phone:write&#x60; &#x60;phone:write:admin&#x60;&lt;br&gt; &lt;br&gt; **Prerequisite:**  1. Business or Enterprise account 2. A Zoom Phone license 3. User must have been previously assigned a Zoom Phone number.
    # @param user_id Provide either userId or email address of the user.
    # @param phone_number_id Provide either phone number or phoneNumberId of the user.
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def unassign_phone_number_with_http_info(user_id, phone_number_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneApi.unassign_phone_number ...'
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling PhoneApi.unassign_phone_number"
      end
      # verify the required parameter 'phone_number_id' is set
      if @api_client.config.client_side_validation && phone_number_id.nil?
        fail ArgumentError, "Missing the required parameter 'phone_number_id' when calling PhoneApi.unassign_phone_number"
      end
      # resource path
      local_var_path = '/phone/users/{userId}/phone_numbers/{phoneNumberId}'.sub('{' + 'userId' + '}', user_id.to_s).sub('{' + 'phoneNumberId' + '}', phone_number_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneApi#unassign_phone_number\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update User's Profile
    # Update a [Zoom Phone](https://support.zoom.us/hc/en-us/categories/360001370051-Zoom-Phone) user's profile.  **Scopes:** `phone:write` `phone:write:admin`  <br><br> **Prerequisite:**  1. Business or Enterprise account 2. A Zoom Phone license
    # @param user_id
    # @param [Hash] opts the optional parameters
    # @option opts [Body45] :body
    # @return [Object]
    def update_user_profile(user_id, opts = {})
      data, _status_code, _headers = update_user_profile_with_http_info(user_id, opts)
      data
    end

    # Update User&#39;s Profile
    # Update a [Zoom Phone](https://support.zoom.us/hc/en-us/categories/360001370051-Zoom-Phone) user&#39;s profile.  **Scopes:** &#x60;phone:write&#x60; &#x60;phone:write:admin&#x60;  &lt;br&gt;&lt;br&gt; **Prerequisite:**  1. Business or Enterprise account 2. A Zoom Phone license
    # @param user_id
    # @param [Hash] opts the optional parameters
    # @option opts [Body45] :body
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def update_user_profile_with_http_info(user_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneApi.update_user_profile ...'
      end
      # verify the required parameter 'user_id' is set
      if @api_client.config.client_side_validation && user_id.nil?
        fail ArgumentError, "Missing the required parameter 'user_id' when calling PhoneApi.update_user_profile"
      end
      # resource path
      local_var_path = '/phone/users/{userId}'.sub('{' + 'userId' + '}', user_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneApi#update_user_profile\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
