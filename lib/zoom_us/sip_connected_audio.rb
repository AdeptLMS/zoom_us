=begin
#Zoom API

#The Zoom API allows developers to safely and securely access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials). All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.

OpenAPI spec version: 2.0.0
Contact: developersupport@zoom.us
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.12

=end

require 'uri'

module ZoomUs
  class SIPConnectedAudio
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Assign SIP Trunk Configuration
    # With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers' IP telephony network, will be connected over this trunk rather than over the PSTN. <br><br> Using this API, a Master Account owner can copy the SIP Connected Audio configurations applied on the Master Account and enable those configurations on a Sub Account. The owner can also disable the configuration in the Sub Account where it was previously enabled.  **Prerequisites:**<br> * Pro or a higher account with SIP Connected Audio plan enabled. * Master Account Owner<br> **Scopes:** `sip_trunk:master`<br>
    # @param account_id
    # @param [Hash] opts the optional parameters
    # @option opts [Body60] :body
    # @return [Object]
    def assign_sip_config(account_id, opts = {})
      data, _status_code, _headers = assign_sip_config_with_http_info(account_id, opts)
      data
    end

    # Assign SIP Trunk Configuration
    # With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers&#39; IP telephony network, will be connected over this trunk rather than over the PSTN. &lt;br&gt;&lt;br&gt; Using this API, a Master Account owner can copy the SIP Connected Audio configurations applied on the Master Account and enable those configurations on a Sub Account. The owner can also disable the configuration in the Sub Account where it was previously enabled.  **Prerequisites:**&lt;br&gt; * Pro or a higher account with SIP Connected Audio plan enabled. * Master Account Owner&lt;br&gt; **Scopes:** &#x60;sip_trunk:master&#x60;&lt;br&gt;
    # @param account_id
    # @param [Hash] opts the optional parameters
    # @option opts [Body60] :body
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def assign_sip_config_with_http_info(account_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SIPConnectedAudioApi.assign_sip_config ...'
      end
      # verify the required parameter 'account_id' is set
      if @api_client.config.client_side_validation && account_id.nil?
        fail ArgumentError, "Missing the required parameter 'account_id' when calling SIPConnectedAudioApi.assign_sip_config"
      end
      # resource path
      local_var_path = '/accounts/{accountId}/sip_trunk/settings'.sub('{' + 'accountId' + '}', account_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SIPConnectedAudioApi#assign_sip_config\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Assign Numbers
    # With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers' IP telephony network, will be connected over this trunk rather than over the PSTN. <br><br>Use this API to assign internal numbers to a Sub Account.  **Prerequisites:**<br> * Pro or a higher account with SIP Connected Audio plan enabled. * The account must be a Master Account<br> **Scopes:** `sip_trunk:master`<br>
    # @param account_id Unique Identifier of the Sub Account.
    # @param [Hash] opts the optional parameters
    # @option opts [Body61] :body
    # @return [Object]
    def assign_sip_trunk_numbers(account_id, opts = {})
      data, _status_code, _headers = assign_sip_trunk_numbers_with_http_info(account_id, opts)
      data
    end

    # Assign Numbers
    # With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers&#39; IP telephony network, will be connected over this trunk rather than over the PSTN. &lt;br&gt;&lt;br&gt;Use this API to assign internal numbers to a Sub Account.  **Prerequisites:**&lt;br&gt; * Pro or a higher account with SIP Connected Audio plan enabled. * The account must be a Master Account&lt;br&gt; **Scopes:** &#x60;sip_trunk:master&#x60;&lt;br&gt;
    # @param account_id Unique Identifier of the Sub Account.
    # @param [Hash] opts the optional parameters
    # @option opts [Body61] :body
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def assign_sip_trunk_numbers_with_http_info(account_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SIPConnectedAudioApi.assign_sip_trunk_numbers ...'
      end
      # verify the required parameter 'account_id' is set
      if @api_client.config.client_side_validation && account_id.nil?
        fail ArgumentError, "Missing the required parameter 'account_id' when calling SIPConnectedAudioApi.assign_sip_trunk_numbers"
      end
      # resource path
      local_var_path = '/accounts/{accountId}/sip_trunk/numbers'.sub('{' + 'accountId' + '}', account_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SIPConnectedAudioApi#assign_sip_trunk_numbers\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete All Numbers
    # With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers' IP telephony network, will be connected over this trunk rather than over the PSTN. <br><br>Use this API to delete all internal numbers assigned to a Sub Account. **Prerequisites:**<br>  * Pro or a higher account with SIP Connected Audio plan enabled. * The account must be a Master Account<br> **Scopes:** `sip_trunk:master`<br>
    # @param account_id Account ID of the Sub Account from which the numbers are to be deleted. This can be retrieved from [List Sub Accounts](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/account) API.
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def delete_all_sip_numbers(account_id, opts = {})
      data, _status_code, _headers = delete_all_sip_numbers_with_http_info(account_id, opts)
      data
    end

    # Delete All Numbers
    # With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers&#39; IP telephony network, will be connected over this trunk rather than over the PSTN. &lt;br&gt;&lt;br&gt;Use this API to delete all internal numbers assigned to a Sub Account. **Prerequisites:**&lt;br&gt;  * Pro or a higher account with SIP Connected Audio plan enabled. * The account must be a Master Account&lt;br&gt; **Scopes:** &#x60;sip_trunk:master&#x60;&lt;br&gt;
    # @param account_id Account ID of the Sub Account from which the numbers are to be deleted. This can be retrieved from [List Sub Accounts](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/account) API.
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def delete_all_sip_numbers_with_http_info(account_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SIPConnectedAudioApi.delete_all_sip_numbers ...'
      end
      # verify the required parameter 'account_id' is set
      if @api_client.config.client_side_validation && account_id.nil?
        fail ArgumentError, "Missing the required parameter 'account_id' when calling SIPConnectedAudioApi.delete_all_sip_numbers"
      end
      # resource path
      local_var_path = '/accounts/{accountId}/sip_trunk/numbers'.sub('{' + 'accountId' + '}', account_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SIPConnectedAudioApi#delete_all_sip_numbers\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List SIP Trunk Numbers
    # With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers' IP telephony network, will be connected over this trunk rather than over the PSTN. <br><br>Use this API to list all the internal numbers that are configured for SIP Connected Audio in a Zoom Account.  **Prerequisites:**<br> * Pro or a higher account with SIP Connected Audio plan enabled. * The account must be a Master Account<br> **Scopes:** `sip_trunk:master`
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse20082]
    def list_sip_trunk_numbers(opts = {})
      data, _status_code, _headers = list_sip_trunk_numbers_with_http_info(opts)
      data
    end

    # List SIP Trunk Numbers
    # With SIP-connected audio, Zoom establishes a SIP trunk (a network connection specifically designed to make and deliver phone calls) over a direct and private connection between the customer’s network and the Zoom cloud. Meeting participants that dial into a meeting or have the meeting call them, and are On-Net from the perspective of the customers&#39; IP telephony network, will be connected over this trunk rather than over the PSTN. &lt;br&gt;&lt;br&gt;Use this API to list all the internal numbers that are configured for SIP Connected Audio in a Zoom Account.  **Prerequisites:**&lt;br&gt; * Pro or a higher account with SIP Connected Audio plan enabled. * The account must be a Master Account&lt;br&gt; **Scopes:** &#x60;sip_trunk:master&#x60;
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse20082, Fixnum, Hash)>] InlineResponse20082 data, response status code and response headers
    def list_sip_trunk_numbers_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SIPConnectedAudioApi.list_sip_trunk_numbers ...'
      end
      # resource path
      local_var_path = '/sip_trunk/numbers'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse20082')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SIPConnectedAudioApi#list_sip_trunk_numbers\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
