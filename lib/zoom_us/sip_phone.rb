=begin
#Zoom API

#The Zoom API allows developers to safely and securely access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials). All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.

OpenAPI spec version: 2.0.0
Contact: developersupport@zoom.us
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.12

=end

require 'uri'

module ZoomUs
  class SIPPhone
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create SIP Phone
    # Zoom’s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to enable a user to use SIP phone.<br><br> **Prerequisites**: * Currently only supported on Cisco and Avaya PBX systems.  * The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.<br> **Scope:** `sip_phone:write:admin` <br>
    # @param [Hash] opts the optional parameters
    # @option opts [Body] :body
    # @return [nil]
    def create_sip_phone(opts = {})
      create_sip_phone_with_http_info(opts)
      nil
    end

    # Create SIP Phone
    # Zoom’s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to enable a user to use SIP phone.&lt;br&gt;&lt;br&gt; **Prerequisites**: * Currently only supported on Cisco and Avaya PBX systems.  * The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.&lt;br&gt; **Scope:** &#x60;sip_phone:write:admin&#x60; &lt;br&gt;
    # @param [Hash] opts the optional parameters
    # @option opts [Body] :body
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def create_sip_phone_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SIPPhone.create_sip_phone ...'
      end
      # resource path
      local_var_path = '/sip_phones'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SIPPhone#create_sip_phone\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete SIP Phone
    # Zoom’s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to delete a specific SIP phone on a Zoom account.<br><br> **Prerequisites**: * Currently only supported on Cisco and Avaya PBX systems.  * User must enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.<br> **Scope:** `sip_phone:read:admin` <br>
    # @param phone_id Unique Identifier of the SIP Phone. It can be retrieved from the List SIP Phones API.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_sip_phone(phone_id, opts = {})
      delete_sip_phone_with_http_info(phone_id, opts)
      nil
    end

    # Delete SIP Phone
    # Zoom’s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to delete a specific SIP phone on a Zoom account.&lt;br&gt;&lt;br&gt; **Prerequisites**: * Currently only supported on Cisco and Avaya PBX systems.  * User must enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.&lt;br&gt; **Scope:** &#x60;sip_phone:read:admin&#x60; &lt;br&gt;
    # @param phone_id Unique Identifier of the SIP Phone. It can be retrieved from the List SIP Phones API.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_sip_phone_with_http_info(phone_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SIPPhone.delete_sip_phone ...'
      end
      # verify the required parameter 'phone_id' is set
      if @api_client.config.client_side_validation && phone_id.nil?
        fail ArgumentError, "Missing the required parameter 'phone_id' when calling SIPPhone.delete_sip_phone"
      end
      # resource path
      local_var_path = '/sip_phones/{phoneId}'.sub('{' + 'phoneId' + '}', phone_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SIPPhone#delete_sip_phone\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List SIP Phones
    # Zoom’s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to list SIP phones on an account.<br><br> **Prerequisites**: * Currently only supported on Cisco and Avaya PBX systems.  * User must enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.<br> **Scope:** `sip_phone:read:admin`<br> <br>
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page_number The current page number of returned records. (default to 1)
    # @option opts [String] :search_key User name or email address of a user. If this parameter is provided, only the SIP phone system integration enabled for that specific user will be returned. Otherwise, all SIP phones on an account will be returned.
    # @option opts [Integer] :page_size The number of records returned within a single API call.
    # @return [InlineResponse2001]
    def list_sip_phones(opts = {})
      data, _status_code, _headers = list_sip_phones_with_http_info(opts)
      data
    end

    # List SIP Phones
    # Zoom’s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to list SIP phones on an account.&lt;br&gt;&lt;br&gt; **Prerequisites**: * Currently only supported on Cisco and Avaya PBX systems.  * User must enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.&lt;br&gt; **Scope:** &#x60;sip_phone:read:admin&#x60;&lt;br&gt; &lt;br&gt;
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page_number The current page number of returned records.
    # @option opts [String] :search_key User name or email address of a user. If this parameter is provided, only the SIP phone system integration enabled for that specific user will be returned. Otherwise, all SIP phones on an account will be returned.
    # @option opts [Integer] :page_size The number of records returned within a single API call.
    # @return [Array<(InlineResponse2001, Fixnum, Hash)>] InlineResponse2001 data, response status code and response headers
    def list_sip_phones_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SIPPhone.list_sip_phones ...'
      end
      # resource path
      local_var_path = '/sip_phones'

      # query parameters
      query_params = {}
      query_params[:'page_number'] = opts[:'page_number'] if !opts[:'page_number'].nil?
      query_params[:'search_key'] = opts[:'search_key'] if !opts[:'search_key'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse2001')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SIPPhone#list_sip_phones\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update SIP Phone
    # Zoom’s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to update information of a specific SIP Phone on a Zoom account.<br><br> **Prerequisites**: * Currently only supported on Cisco and Avaya PBX systems.  * The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.<br> **Scope:** `sip_phone:write:admin` <br>
    # @param phone_id Unique Identifier of the SIP Phone. This can be retrieved from the List SIP Phones API.
    # @param [Hash] opts the optional parameters
    # @option opts [Body1] :body
    # @return [nil]
    def update_sip_phone(phone_id, opts = {})
      update_sip_phone_with_http_info(phone_id, opts)
      nil
    end

    # Update SIP Phone
    # Zoom’s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to update information of a specific SIP Phone on a Zoom account.&lt;br&gt;&lt;br&gt; **Prerequisites**: * Currently only supported on Cisco and Avaya PBX systems.  * The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.&lt;br&gt; **Scope:** &#x60;sip_phone:write:admin&#x60; &lt;br&gt;
    # @param phone_id Unique Identifier of the SIP Phone. This can be retrieved from the List SIP Phones API.
    # @param [Hash] opts the optional parameters
    # @option opts [Body1] :body
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def update_sip_phone_with_http_info(phone_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SIPPhone.update_sip_phone ...'
      end
      # verify the required parameter 'phone_id' is set
      if @api_client.config.client_side_validation && phone_id.nil?
        fail ArgumentError, "Missing the required parameter 'phone_id' when calling SIPPhone.update_sip_phone"
      end
      # resource path
      local_var_path = '/sip_phones/{phoneId}'.sub('{' + 'phoneId' + '}', phone_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SIPPhone#update_sip_phone\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
