=begin
#Zoom API

#The Zoom API allows developers to safely and securely access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials). All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.

OpenAPI spec version: 2.0.0
Contact: developersupport@zoom.us
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.12

=end

require 'uri'

module ZoomUs
  class PhoneCallQueues
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Add Members to a Call Queue
    # Add phone users and/or [common area phones](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones) as members to a specific Call Queue.<br><br> **Prerequisites:**<br> * Pro or higher account plan. * Zoom Phone license<br> **Scopes:** `phone:write:admin`<br>
    # @param call_queue_id Unique Identifier of the Call Queue.
    # @param [Hash] opts the optional parameters
    # @option opts [Body69] :body
    # @return [Object]
    def add_members_to_call_queue(call_queue_id, opts = {})
      data, _status_code, _headers = add_members_to_call_queue_with_http_info(call_queue_id, opts)
      data
    end

    # Add Members to a Call Queue
    # Add phone users and/or [common area phones](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones) as members to a specific Call Queue.&lt;br&gt;&lt;br&gt; **Prerequisites:**&lt;br&gt; * Pro or higher account plan. * Zoom Phone license&lt;br&gt; **Scopes:** &#x60;phone:write:admin&#x60;&lt;br&gt;
    # @param call_queue_id Unique Identifier of the Call Queue.
    # @param [Hash] opts the optional parameters
    # @option opts [Body69] :body
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def add_members_to_call_queue_with_http_info(call_queue_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneCallQueuesApi.add_members_to_call_queue ...'
      end
      # verify the required parameter 'call_queue_id' is set
      if @api_client.config.client_side_validation && call_queue_id.nil?
        fail ArgumentError, "Missing the required parameter 'call_queue_id' when calling PhoneCallQueuesApi.add_members_to_call_queue"
      end
      # resource path
      local_var_path = '/phone/call_queues/{callQueueId}/members'.sub('{' + 'callQueueId' + '}', call_queue_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneCallQueuesApi#add_members_to_call_queue\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Assign Numbers to a Call Queue
    # After [buying phone number(s)](https://support.zoom.us/hc/en-us/articles/360020808292#h_007ec8c2-0914-4265-8351-96ab23efa3ad), you can assign it, allowing callers to directly dial a number to reach a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br><br> **Prerequisites:**<br> * Pro or higher account plan. * Account owner or admin permissions * Zoom Phone license<br> **Scopes:** `phone:write:admin`<br>
    # @param call_queue_id Unique Identifier of the Call Queue.
    # @param [Hash] opts the optional parameters
    # @option opts [Body68] :body
    # @return [Object]
    def assign_phone_to_call_queue(call_queue_id, opts = {})
      data, _status_code, _headers = assign_phone_to_call_queue_with_http_info(call_queue_id, opts)
      data
    end

    # Assign Numbers to a Call Queue
    # After [buying phone number(s)](https://support.zoom.us/hc/en-us/articles/360020808292#h_007ec8c2-0914-4265-8351-96ab23efa3ad), you can assign it, allowing callers to directly dial a number to reach a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).&lt;br&gt;&lt;br&gt; **Prerequisites:**&lt;br&gt; * Pro or higher account plan. * Account owner or admin permissions * Zoom Phone license&lt;br&gt; **Scopes:** &#x60;phone:write:admin&#x60;&lt;br&gt;
    # @param call_queue_id Unique Identifier of the Call Queue.
    # @param [Hash] opts the optional parameters
    # @option opts [Body68] :body
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def assign_phone_to_call_queue_with_http_info(call_queue_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneCallQueuesApi.assign_phone_to_call_queue ...'
      end
      # verify the required parameter 'call_queue_id' is set
      if @api_client.config.client_side_validation && call_queue_id.nil?
        fail ArgumentError, "Missing the required parameter 'call_queue_id' when calling PhoneCallQueuesApi.assign_phone_to_call_queue"
      end
      # resource path
      local_var_path = '/phone/call_queues/{callQueueId}/phone_numbers'.sub('{' + 'callQueueId' + '}', call_queue_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneCallQueuesApi#assign_phone_to_call_queue\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Change Call Queue Manager
    # A call queue manager has the privileges to maanage the call queue's voicemail inbox and recordings, change all call queue settings and call queue policy settings.<br><br> Use this API to to set another phone user as the [call queue manager](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues#h_db06854b-e6a3-4afe-ba15-baf58f31f90c). **Prerequisites:**<br> * Pro or higher account plan. * Account owner or admin permissions * Zoom Phone license<br> **Scopes:** `phone:write:admin`<br>
    # @param call_queue_id Unique Identifier of the Call Queue.
    # @param [Hash] opts the optional parameters
    # @option opts [Body70] :body
    # @return [Object]
    def change_call_queue_manager(call_queue_id, opts = {})
      data, _status_code, _headers = change_call_queue_manager_with_http_info(call_queue_id, opts)
      data
    end

    # Change Call Queue Manager
    # A call queue manager has the privileges to maanage the call queue&#39;s voicemail inbox and recordings, change all call queue settings and call queue policy settings.&lt;br&gt;&lt;br&gt; Use this API to to set another phone user as the [call queue manager](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues#h_db06854b-e6a3-4afe-ba15-baf58f31f90c). **Prerequisites:**&lt;br&gt; * Pro or higher account plan. * Account owner or admin permissions * Zoom Phone license&lt;br&gt; **Scopes:** &#x60;phone:write:admin&#x60;&lt;br&gt;
    # @param call_queue_id Unique Identifier of the Call Queue.
    # @param [Hash] opts the optional parameters
    # @option opts [Body70] :body
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def change_call_queue_manager_with_http_info(call_queue_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneCallQueuesApi.change_call_queue_manager ...'
      end
      # verify the required parameter 'call_queue_id' is set
      if @api_client.config.client_side_validation && call_queue_id.nil?
        fail ArgumentError, "Missing the required parameter 'call_queue_id' when calling PhoneCallQueuesApi.change_call_queue_manager"
      end
      # resource path
      local_var_path = '/phone/call_queues/{callQueueId}/manager'.sub('{' + 'callQueueId' + '}', call_queue_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneCallQueuesApi#change_call_queue_manager\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create a Call Queue
    # Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.<br> Use this API to [create a call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues#h_e81faeeb-9184-429a-aaea-df49ff5ff413).<br> You can add phone users or common area phones to call queues.  **Prerequisites:**<br> * Pro, Business, or Education account * Account owner or admin permissions * Zoom Phone license<br> **Scopes:** `phone:write:admin`<br>
    # @param [Hash] opts the optional parameters
    # @option opts [Body66] :body
    # @return [InlineResponse20123]
    def create_call_queue(opts = {})
      data, _status_code, _headers = create_call_queue_with_http_info(opts)
      data
    end

    # Create a Call Queue
    # Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.&lt;br&gt; Use this API to [create a call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues#h_e81faeeb-9184-429a-aaea-df49ff5ff413).&lt;br&gt; You can add phone users or common area phones to call queues.  **Prerequisites:**&lt;br&gt; * Pro, Business, or Education account * Account owner or admin permissions * Zoom Phone license&lt;br&gt; **Scopes:** &#x60;phone:write:admin&#x60;&lt;br&gt;
    # @param [Hash] opts the optional parameters
    # @option opts [Body66] :body
    # @return [Array<(InlineResponse20123, Fixnum, Hash)>] InlineResponse20123 data, response status code and response headers
    def create_call_queue_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneCallQueuesApi.create_call_queue ...'
      end
      # resource path
      local_var_path = '/phone/call_queues'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse20123')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneCallQueuesApi#create_call_queue\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete a Call Queue
    # Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.<br> Use this API to delete a Call Queue.<br>  **Prerequisites:**<br> * Pro, Business, or Education account * Account owner or admin permissions * Zoom Phone license<br> **Scopes:** `phone:write:admin`<br>
    # @param call_queue_id Unique Identifier of the call queue.
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def delete_a_call_queue(call_queue_id, opts = {})
      data, _status_code, _headers = delete_a_call_queue_with_http_info(call_queue_id, opts)
      data
    end

    # Delete a Call Queue
    # Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.&lt;br&gt; Use this API to delete a Call Queue.&lt;br&gt;  **Prerequisites:**&lt;br&gt; * Pro, Business, or Education account * Account owner or admin permissions * Zoom Phone license&lt;br&gt; **Scopes:** &#x60;phone:write:admin&#x60;&lt;br&gt;
    # @param call_queue_id Unique Identifier of the call queue.
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def delete_a_call_queue_with_http_info(call_queue_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneCallQueuesApi.delete_a_call_queue ...'
      end
      # verify the required parameter 'call_queue_id' is set
      if @api_client.config.client_side_validation && call_queue_id.nil?
        fail ArgumentError, "Missing the required parameter 'call_queue_id' when calling PhoneCallQueuesApi.delete_a_call_queue"
      end
      # resource path
      local_var_path = '/phone/call_queues/{callQueueId}'.sub('{' + 'callQueueId' + '}', call_queue_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneCallQueuesApi#delete_a_call_queue\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get Call Queue Details
    # Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.<br> Use this API to get information on a specific Call Queue.<br><br>  **Prerequisites:**<br> * Pro, Business, or Education account * Account owner or admin permissions * Zoom Phone license<br> **Scopes:** `phone:read:admin`<br>
    # @param call_queue_id Unique Identifier of the Call Queue. This can be retrieved from [List Call Queues API]().
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse20091]
    def get_a_call_queue(call_queue_id, opts = {})
      data, _status_code, _headers = get_a_call_queue_with_http_info(call_queue_id, opts)
      data
    end

    # Get Call Queue Details
    # Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.&lt;br&gt; Use this API to get information on a specific Call Queue.&lt;br&gt;&lt;br&gt;  **Prerequisites:**&lt;br&gt; * Pro, Business, or Education account * Account owner or admin permissions * Zoom Phone license&lt;br&gt; **Scopes:** &#x60;phone:read:admin&#x60;&lt;br&gt;
    # @param call_queue_id Unique Identifier of the Call Queue. This can be retrieved from [List Call Queues API]().
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse20091, Fixnum, Hash)>] InlineResponse20091 data, response status code and response headers
    def get_a_call_queue_with_http_info(call_queue_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneCallQueuesApi.get_a_call_queue ...'
      end
      # verify the required parameter 'call_queue_id' is set
      if @api_client.config.client_side_validation && call_queue_id.nil?
        fail ArgumentError, "Missing the required parameter 'call_queue_id' when calling PhoneCallQueuesApi.get_a_call_queue"
      end
      # resource path
      local_var_path = '/phone/call_queues/{callQueueId}'.sub('{' + 'callQueueId' + '}', call_queue_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse20091')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneCallQueuesApi#get_a_call_queue\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List Call Queues
    # Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.<br> Use this API to list Call queues.<br><br> **Prerequisites:**<br> * Pro, Business, or Education account * Account owner or admin permissions * Zoom Phone license<br> **Scopes:** `phone:read:admin`<br>
    # @param [Hash] opts the optional parameters
    # @option opts [String] :next_page_token The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
    # @option opts [Integer] :page_size The number of records returned from a single API call. (default to 30)
    # @return [InlineResponse20090]
    def list_call_queues(opts = {})
      data, _status_code, _headers = list_call_queues_with_http_info(opts)
      data
    end

    # List Call Queues
    # Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.&lt;br&gt; Use this API to list Call queues.&lt;br&gt;&lt;br&gt; **Prerequisites:**&lt;br&gt; * Pro, Business, or Education account * Account owner or admin permissions * Zoom Phone license&lt;br&gt; **Scopes:** &#x60;phone:read:admin&#x60;&lt;br&gt;
    # @param [Hash] opts the optional parameters
    # @option opts [String] :next_page_token The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
    # @option opts [Integer] :page_size The number of records returned from a single API call.
    # @return [Array<(InlineResponse20090, Fixnum, Hash)>] InlineResponse20090 data, response status code and response headers
    def list_call_queues_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneCallQueuesApi.list_call_queues ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 100
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling PhoneCallQueuesApi.list_call_queues, must be smaller than or equal to 100.'
      end

      # resource path
      local_var_path = '/phone/call_queues'

      # query parameters
      query_params = {}
      query_params[:'next_page_token'] = opts[:'next_page_token'] if !opts[:'next_page_token'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse20090')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneCallQueuesApi#list_call_queues\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Unassign a Phone Number
    # After assigning a phone number, you can unbind it if you don't want it to be assigned to a [Call Queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues). Use this API to unbind a phone number from a Call Queue. After successful unbinding, the number will appear in the [Unassigned tab](https://zoom.us/signin#/numbers/unassigned).<br><br> **Prerequisites:** * Pro or higher account palan * Account owner or admin permissions * Zoom Phone license <br> **Scopes:** `phone:write:admin`<br>
    # @param call_queue_id Unique Identifier of the Call Queue. This can be retrieved from the List Call Queues API.
    # @param phone_number_id Unique Identifier of the Phone Number.
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def un_assign_phone_num_call_queue(call_queue_id, phone_number_id, opts = {})
      data, _status_code, _headers = un_assign_phone_num_call_queue_with_http_info(call_queue_id, phone_number_id, opts)
      data
    end

    # Unassign a Phone Number
    # After assigning a phone number, you can unbind it if you don&#39;t want it to be assigned to a [Call Queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues). Use this API to unbind a phone number from a Call Queue. After successful unbinding, the number will appear in the [Unassigned tab](https://zoom.us/signin#/numbers/unassigned).&lt;br&gt;&lt;br&gt; **Prerequisites:** * Pro or higher account palan * Account owner or admin permissions * Zoom Phone license &lt;br&gt; **Scopes:** &#x60;phone:write:admin&#x60;&lt;br&gt;
    # @param call_queue_id Unique Identifier of the Call Queue. This can be retrieved from the List Call Queues API.
    # @param phone_number_id Unique Identifier of the Phone Number.
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def un_assign_phone_num_call_queue_with_http_info(call_queue_id, phone_number_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneCallQueuesApi.un_assign_phone_num_call_queue ...'
      end
      # verify the required parameter 'call_queue_id' is set
      if @api_client.config.client_side_validation && call_queue_id.nil?
        fail ArgumentError, "Missing the required parameter 'call_queue_id' when calling PhoneCallQueuesApi.un_assign_phone_num_call_queue"
      end
      # verify the required parameter 'phone_number_id' is set
      if @api_client.config.client_side_validation && phone_number_id.nil?
        fail ArgumentError, "Missing the required parameter 'phone_number_id' when calling PhoneCallQueuesApi.un_assign_phone_num_call_queue"
      end
      # resource path
      local_var_path = '/phone/call_queues/{callQueueId}/phone_numbers/{phoneNumberId}'.sub('{' + 'callQueueId' + '}', call_queue_id.to_s).sub('{' + 'phoneNumberId' + '}', phone_number_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneCallQueuesApi#un_assign_phone_num_call_queue\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Unassign all Phone Numbers
    # Use this API to unbind all phone numbers that are assigned to a [Call Queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues) After successful unbinding, the numbers will appear in the [Unassigned tab](https://zoom.us/signin#/numbers/unassigned).<br> If you only need to unassign a specific phone number, use the Unassign a Phone Number API instead. <br> **Prerequisites:** * Pro or higher account palan * Account owner or admin permissions * Zoom Phone license <br> **Scopes:** `phone:write:admin`<br>
    # @param call_queue_id Unique Identifier of the Call Queue. This can be retrieved from List Call Queues API.
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def unassign_a_phone_num_call_queue(call_queue_id, opts = {})
      data, _status_code, _headers = unassign_a_phone_num_call_queue_with_http_info(call_queue_id, opts)
      data
    end

    # Unassign all Phone Numbers
    # Use this API to unbind all phone numbers that are assigned to a [Call Queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues) After successful unbinding, the numbers will appear in the [Unassigned tab](https://zoom.us/signin#/numbers/unassigned).&lt;br&gt; If you only need to unassign a specific phone number, use the Unassign a Phone Number API instead. &lt;br&gt; **Prerequisites:** * Pro or higher account palan * Account owner or admin permissions * Zoom Phone license &lt;br&gt; **Scopes:** &#x60;phone:write:admin&#x60;&lt;br&gt;
    # @param call_queue_id Unique Identifier of the Call Queue. This can be retrieved from List Call Queues API.
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def unassign_a_phone_num_call_queue_with_http_info(call_queue_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneCallQueuesApi.unassign_a_phone_num_call_queue ...'
      end
      # verify the required parameter 'call_queue_id' is set
      if @api_client.config.client_side_validation && call_queue_id.nil?
        fail ArgumentError, "Missing the required parameter 'call_queue_id' when calling PhoneCallQueuesApi.unassign_a_phone_num_call_queue"
      end
      # resource path
      local_var_path = '/phone/call_queues/{callQueueId}/phone_numbers'.sub('{' + 'callQueueId' + '}', call_queue_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneCallQueuesApi#unassign_a_phone_num_call_queue\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Unassign all Members
    # Use this API to remove all members from a Call Queue who were previously assigned to that Call Queue. The members could be phone users or [common area phones](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones). **Prerequisites:**<br> * Pro or higher account plan. * Zoom Phone license<br> **Scopes:** `phone:write:admin`<br>
    # @param call_queue_id
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def unassign_all_members(call_queue_id, opts = {})
      data, _status_code, _headers = unassign_all_members_with_http_info(call_queue_id, opts)
      data
    end

    # Unassign all Members
    # Use this API to remove all members from a Call Queue who were previously assigned to that Call Queue. The members could be phone users or [common area phones](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones). **Prerequisites:**&lt;br&gt; * Pro or higher account plan. * Zoom Phone license&lt;br&gt; **Scopes:** &#x60;phone:write:admin&#x60;&lt;br&gt;
    # @param call_queue_id
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def unassign_all_members_with_http_info(call_queue_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneCallQueuesApi.unassign_all_members ...'
      end
      # verify the required parameter 'call_queue_id' is set
      if @api_client.config.client_side_validation && call_queue_id.nil?
        fail ArgumentError, "Missing the required parameter 'call_queue_id' when calling PhoneCallQueuesApi.unassign_all_members"
      end
      # resource path
      local_var_path = '/phone/call_queues/{callQueueId}/members'.sub('{' + 'callQueueId' + '}', call_queue_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneCallQueuesApi#unassign_all_members\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Unassign a Member
    # Use this API to remove a member from a Call Queue who was previously added to that Call Queue. The member could be a phone user or a [common area phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones). A member who is a Call Queue Manager cannot be unassigned from the Call Queue using this API.  **Prerequisites:**<br> * Pro or higher account plan. * Zoom Phone license<br> **Scopes:** `phone:write:admin`<br>
    # @param call_queue_id Unique Identifier of the Call Queue from which the member needs to be unassigned.
    # @param member_id Unique Identifier of the member who needs to be unassigned.
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def unassign_member_from_call_queue(call_queue_id, member_id, opts = {})
      data, _status_code, _headers = unassign_member_from_call_queue_with_http_info(call_queue_id, member_id, opts)
      data
    end

    # Unassign a Member
    # Use this API to remove a member from a Call Queue who was previously added to that Call Queue. The member could be a phone user or a [common area phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones). A member who is a Call Queue Manager cannot be unassigned from the Call Queue using this API.  **Prerequisites:**&lt;br&gt; * Pro or higher account plan. * Zoom Phone license&lt;br&gt; **Scopes:** &#x60;phone:write:admin&#x60;&lt;br&gt;
    # @param call_queue_id Unique Identifier of the Call Queue from which the member needs to be unassigned.
    # @param member_id Unique Identifier of the member who needs to be unassigned.
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def unassign_member_from_call_queue_with_http_info(call_queue_id, member_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneCallQueuesApi.unassign_member_from_call_queue ...'
      end
      # verify the required parameter 'call_queue_id' is set
      if @api_client.config.client_side_validation && call_queue_id.nil?
        fail ArgumentError, "Missing the required parameter 'call_queue_id' when calling PhoneCallQueuesApi.unassign_member_from_call_queue"
      end
      # verify the required parameter 'member_id' is set
      if @api_client.config.client_side_validation && member_id.nil?
        fail ArgumentError, "Missing the required parameter 'member_id' when calling PhoneCallQueuesApi.unassign_member_from_call_queue"
      end
      # resource path
      local_var_path = '/phone/call_queues/{callQueueId}/members/{memberId}'.sub('{' + 'callQueueId' + '}', call_queue_id.to_s).sub('{' + 'memberId' + '}', member_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneCallQueuesApi#unassign_member_from_call_queue\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update Call Queue Details
    # Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.<br> Use this API to update information of a specific Call Queue.<br>  **Prerequisites:**<br> * Pro, Business, or Education account * Account owner or admin permissions * Zoom Phone license<br> **Scopes:** `phone:write:admin`<br>
    # @param call_queue_id Unique Identifier of the Call Queue.
    # @param [Hash] opts the optional parameters
    # @option opts [Body67] :body
    # @return [Object]
    def update_call_queue(call_queue_id, opts = {})
      data, _status_code, _headers = update_call_queue_with_http_info(call_queue_id, opts)
      data
    end

    # Update Call Queue Details
    # Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.&lt;br&gt; Use this API to update information of a specific Call Queue.&lt;br&gt;  **Prerequisites:**&lt;br&gt; * Pro, Business, or Education account * Account owner or admin permissions * Zoom Phone license&lt;br&gt; **Scopes:** &#x60;phone:write:admin&#x60;&lt;br&gt;
    # @param call_queue_id Unique Identifier of the Call Queue.
    # @param [Hash] opts the optional parameters
    # @option opts [Body67] :body
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def update_call_queue_with_http_info(call_queue_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneCallQueuesApi.update_call_queue ...'
      end
      # verify the required parameter 'call_queue_id' is set
      if @api_client.config.client_side_validation && call_queue_id.nil?
        fail ArgumentError, "Missing the required parameter 'call_queue_id' when calling PhoneCallQueuesApi.update_call_queue"
      end
      # resource path
      local_var_path = '/phone/call_queues/{callQueueId}'.sub('{' + 'callQueueId' + '}', call_queue_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneCallQueuesApi#update_call_queue\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
