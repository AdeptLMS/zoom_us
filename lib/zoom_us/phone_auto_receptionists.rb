=begin
#Zoom API

#The Zoom API allows developers to safely and securely access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials). All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.

OpenAPI spec version: 2.0.0
Contact: developersupport@zoom.us
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.12

=end

require 'uri'

module ZoomUs
  class PhoneAutoReceptionists
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Assign Phone Numbers
    # Assign available phone numbers to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-). The available numbers can be retrieved using the List Phone Numbers API with `type` query parameter set to \"unassigned\".  **Prerequisites:** * Pro or higher account plan with Zoom Phone License * Account owner or admin permissions<br> **Scopes:** `phone:write:admin`<br>
    # @param auto_receptionist_id Unique Identifier of the Auto Receptionist. It can be retrieved from the [List Sites API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites).
    # @param [Hash] opts the optional parameters
    # @option opts [Body73] :body
    # @return [Object]
    def assign_phone_numbers_auto_receptionist(auto_receptionist_id, opts = {})
      data, _status_code, _headers = assign_phone_numbers_auto_receptionist_with_http_info(auto_receptionist_id, opts)
      data
    end

    # Assign Phone Numbers
    # Assign available phone numbers to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-). The available numbers can be retrieved using the List Phone Numbers API with &#x60;type&#x60; query parameter set to \&quot;unassigned\&quot;.  **Prerequisites:** * Pro or higher account plan with Zoom Phone License * Account owner or admin permissions&lt;br&gt; **Scopes:** &#x60;phone:write:admin&#x60;&lt;br&gt;
    # @param auto_receptionist_id Unique Identifier of the Auto Receptionist. It can be retrieved from the [List Sites API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites).
    # @param [Hash] opts the optional parameters
    # @option opts [Body73] :body
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def assign_phone_numbers_auto_receptionist_with_http_info(auto_receptionist_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneAutoReceptionistsApi.assign_phone_numbers_auto_receptionist ...'
      end
      # verify the required parameter 'auto_receptionist_id' is set
      if @api_client.config.client_side_validation && auto_receptionist_id.nil?
        fail ArgumentError, "Missing the required parameter 'auto_receptionist_id' when calling PhoneAutoReceptionistsApi.assign_phone_numbers_auto_receptionist"
      end
      # resource path
      local_var_path = '/phone/auto_receptionists/{autoReceptionistId}/phone_numbers'.sub('{' + 'autoReceptionistId' + '}', auto_receptionist_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneAutoReceptionistsApi#assign_phone_numbers_auto_receptionist\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Unassign a Phone Number
    # Unassign a specific phone number that was previously assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-).   **Prerequisites:** * Pro or higher account plan with Zoom Phone License * Account owner or admin permissions<br> **Scopes:** `phone:write:admin`<br>
    # @param auto_receptionist_id Unique identifier of the auto receptionist. This can be retrieved from the List Phone Sites API.
    # @param phone_number_id Unique Identifier of the phone number or provide the actual phone number in e164 format (example: +19995550123).
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def unassign_a_phone_num_auto_receptionist(auto_receptionist_id, phone_number_id, opts = {})
      data, _status_code, _headers = unassign_a_phone_num_auto_receptionist_with_http_info(auto_receptionist_id, phone_number_id, opts)
      data
    end

    # Unassign a Phone Number
    # Unassign a specific phone number that was previously assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-).   **Prerequisites:** * Pro or higher account plan with Zoom Phone License * Account owner or admin permissions&lt;br&gt; **Scopes:** &#x60;phone:write:admin&#x60;&lt;br&gt;
    # @param auto_receptionist_id Unique identifier of the auto receptionist. This can be retrieved from the List Phone Sites API.
    # @param phone_number_id Unique Identifier of the phone number or provide the actual phone number in e164 format (example: +19995550123).
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def unassign_a_phone_num_auto_receptionist_with_http_info(auto_receptionist_id, phone_number_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneAutoReceptionistsApi.unassign_a_phone_num_auto_receptionist ...'
      end
      # verify the required parameter 'auto_receptionist_id' is set
      if @api_client.config.client_side_validation && auto_receptionist_id.nil?
        fail ArgumentError, "Missing the required parameter 'auto_receptionist_id' when calling PhoneAutoReceptionistsApi.unassign_a_phone_num_auto_receptionist"
      end
      # verify the required parameter 'phone_number_id' is set
      if @api_client.config.client_side_validation && phone_number_id.nil?
        fail ArgumentError, "Missing the required parameter 'phone_number_id' when calling PhoneAutoReceptionistsApi.unassign_a_phone_num_auto_receptionist"
      end
      # resource path
      local_var_path = '/phone/auto_receptionists/{autoReceptionistId}/phone_numbers/{phoneNumberId}'.sub('{' + 'autoReceptionistId' + '}', auto_receptionist_id.to_s).sub('{' + 'phoneNumberId' + '}', phone_number_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneAutoReceptionistsApi#unassign_a_phone_num_auto_receptionist\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Unassign all Phone Numbers
    # Unassign all phone numbers that were previously assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-).   **Prerequisites:** * Pro or higher account plan with Zoom Phone License * Account owner or admin permissions<br> **Scopes:** `phone:write:admin`<br>
    # @param auto_receptionist_id
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def unassign_all_phone_nums_auto_receptionist(auto_receptionist_id, opts = {})
      data, _status_code, _headers = unassign_all_phone_nums_auto_receptionist_with_http_info(auto_receptionist_id, opts)
      data
    end

    # Unassign all Phone Numbers
    # Unassign all phone numbers that were previously assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-).   **Prerequisites:** * Pro or higher account plan with Zoom Phone License * Account owner or admin permissions&lt;br&gt; **Scopes:** &#x60;phone:write:admin&#x60;&lt;br&gt;
    # @param auto_receptionist_id
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def unassign_all_phone_nums_auto_receptionist_with_http_info(auto_receptionist_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneAutoReceptionistsApi.unassign_all_phone_nums_auto_receptionist ...'
      end
      # verify the required parameter 'auto_receptionist_id' is set
      if @api_client.config.client_side_validation && auto_receptionist_id.nil?
        fail ArgumentError, "Missing the required parameter 'auto_receptionist_id' when calling PhoneAutoReceptionistsApi.unassign_all_phone_nums_auto_receptionist"
      end
      # resource path
      local_var_path = '/phone/auto_receptionists/{autoReceptionistId}/phone_numbers'.sub('{' + 'autoReceptionistId' + '}', auto_receptionist_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneAutoReceptionistsApi#unassign_all_phone_nums_auto_receptionist\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update Auto Receptionist Details
    # An auto receptionist answers calls with a personalized recording and routes calls to a phone user, call queue, common area phone, or voicemail. An auto receptionist can also be set up so that it routes calls to an interactive voice response (IVR) system to allow callers to select the routing options.<br> Use this API to [change information](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-#h_1d5ffc56-6ba3-4ce5-9d86-4a1a1ee743f3) such as display name and extension number assigned to the main auto receptionist.<br><br> **Prerequisites:**<br> * Pro or higher account with Zoom Phone license.<br> **Scopes:** `phone:write:admin` <br>
    # @param auto_receptionist_id Unique Identifier of the Auto Receptionist. It can be retrieved from the [List Sites API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites).
    # @param [Hash] opts the optional parameters
    # @option opts [Body72] :body
    # @return [Object]
    def update_auto_receptionist(auto_receptionist_id, opts = {})
      data, _status_code, _headers = update_auto_receptionist_with_http_info(auto_receptionist_id, opts)
      data
    end

    # Update Auto Receptionist Details
    # An auto receptionist answers calls with a personalized recording and routes calls to a phone user, call queue, common area phone, or voicemail. An auto receptionist can also be set up so that it routes calls to an interactive voice response (IVR) system to allow callers to select the routing options.&lt;br&gt; Use this API to [change information](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-#h_1d5ffc56-6ba3-4ce5-9d86-4a1a1ee743f3) such as display name and extension number assigned to the main auto receptionist.&lt;br&gt;&lt;br&gt; **Prerequisites:**&lt;br&gt; * Pro or higher account with Zoom Phone license.&lt;br&gt; **Scopes:** &#x60;phone:write:admin&#x60; &lt;br&gt;
    # @param auto_receptionist_id Unique Identifier of the Auto Receptionist. It can be retrieved from the [List Sites API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites).
    # @param [Hash] opts the optional parameters
    # @option opts [Body72] :body
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def update_auto_receptionist_with_http_info(auto_receptionist_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneAutoReceptionistsApi.update_auto_receptionist ...'
      end
      # verify the required parameter 'auto_receptionist_id' is set
      if @api_client.config.client_side_validation && auto_receptionist_id.nil?
        fail ArgumentError, "Missing the required parameter 'auto_receptionist_id' when calling PhoneAutoReceptionistsApi.update_auto_receptionist"
      end
      # resource path
      local_var_path = '/phone/auto_receptionists/{autoReceptionistId}'.sub('{' + 'autoReceptionistId' + '}', auto_receptionist_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      auth_names = ['OAuth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneAutoReceptionistsApi#update_auto_receptionist\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
