=begin
#Zoom API

#The Zoom API allows developers to safely and securely access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials). All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.

OpenAPI spec version: 2.0.0
Contact: developersupport@zoom.us
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.12

=end

require 'spec_helper'
require 'json'

# Unit tests for ZoomUs::AccountsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AccountsApi' do
  before do
    # run before each test
    @instance = ZoomUs::AccountsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AccountsApi' do
    it 'should create an instance of AccountsApi' do
      expect(@instance).to be_instance_of(ZoomUs::AccountsApi)
    end
  end

  # unit tests for account
  # Get a Sub Account
  # Get a Sub Account under the Master Account. &lt;aside&gt;Your account must be a Master Account in order to retrieve Sub Accounts. Zoom only assigns this privilege to trusted partners.&lt;/aside&gt;&lt;br&gt;&lt;br&gt; **Prerequisites:** * Pro or a higher paid account with Master Account option enabled. &lt;br&gt; **Scope**: &#x60;account:write:admin&#x60;&lt;br&gt;   
  # @param account_id The account ID.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20012]
  describe 'account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_create
  # Create a Sub Account
  # Create a Sub Account under the Master Account. &lt;aside&gt;Your account must be a Master Account in order to create Sub Accounts. Zoom only assigns this privilege to trusted partners. Please note: the created user will receive a confirmation email.&lt;/aside&gt;&lt;br&gt;&lt;br&gt; **Prerequisites:**&lt;br&gt; * Pro or a higher paid account with Master Account option enabled. &lt;br&gt; **Scope**: &#x60;account:write:admin&#x60;&lt;br&gt;  
  # @param body Account.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2015]
  describe 'account_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_disassociate
  # Disassociate a Sub Account
  # Disassociate a Sub Account from the Master Account. This will leave the Sub Account intact but it will no longer be associated with the master account.&lt;br&gt;  &lt;aside&gt;Your account must be a Master Account in order to disassociate Sub Accounts. Zoom only assigns this privilege to trusted partners.&lt;/aside&gt; &lt;br&gt;  **Prerequisites:** * Pro or a higher paid account with Master Account option enabled. &lt;br&gt; **Scope**: &#x60;account:write:admin&#x60;&lt;br&gt;  
  # @param account_id The account ID.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'account_disassociate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_managed_domain
  # Get Managed Domains
  # Get a Sub Account&#39;s [managed domains](https://support.zoom.us/hc/en-us/articles/203395207-What-is-Managed-Domain-).&lt;br&gt;&lt;br&gt;  To get managed domains of the Master Account, provide &#x60;me&#x60; as the value for accountId in the path parameter.   Provide the Sub Account&#39;s Account ID as the value of accountId path parameter to get managed domains of the Sub Account.  **Prerequisites:**&lt;br&gt; * Pro or a higher paid account with Master Account option enabled. &lt;br&gt; **Scope:** &#x60;account:read:admin&#x60;&lt;br&gt;    
  # @param account_id The account ID.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20013]
  describe 'account_managed_domain test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_options_update
  # Update Options
  # Update a Sub Account&#39;s options under the Master Account.&lt;br&gt; &lt;aside&gt;Your account must be a Master Account in order to update the options for Sub Accounts. Zoom only assigns this privilege to trusted partners. &lt;/aside&gt;  **Prerequisites:** * Pro or a higher paid account with Master Account option enabled. &lt;br&gt; **Scope**: &#x60;account:write:admin&#x60;&lt;br&gt;  
  # @param account_id The account ID.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'account_options_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_settings
  # Get Settings
  # Get the settings of a Sub Account under a Master Account.&lt;br&gt; To get the settings of a Master Account, use &#x60;me&#x60; as the value for the &#x60;accountId&#x60; path parameter.&lt;p style&#x3D;\&quot;background-color:#FEEFB3; color:#9F6000; padding:8px\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; The &#x60;force_pmi_jbh_password&#x60; field under meeting settings is planned to be deprecated on September 22, 2019. This field will be replaced by another field that will provide the same functionality.&lt;/p&gt;  **Prerequisites**:  * The Sub Account must be a paid account.&lt;br&gt; **Scopes**: &#x60;account:read:admin&#x60; &lt;br&gt; 
  # @param account_id The account ID.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :option &#x60;meeting_authentication&#x60;: Use this query parameter to view [meeting authentication configuration](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied on the account.&lt;br&gt;&#x60;recording_authentication&#x60;: Use this query parameter to view [recording authentication configuration](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied on the account.
  # @return [Object]
  describe 'account_settings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_settings_update
  # Update Settings
  # Update the settings of a Sub Account that is under a Master Account.&lt;br&gt; To update the settings of the Master Account, use &#x60;me&#x60; as the value of the &#x60;accountId&#x60; path parameter.&lt;p style&#x3D;\&quot;background-color:#FEEFB3; color:#9F6000\&quot;&gt;&lt;br&gt;Note:&lt;/b&gt; The &#x60;force_pmi_jbh_password&#x60; field under meeting settings is planned to be deprecated on September 22, 2019. This field will be replaced by another field that will provide the same functionality.&lt;/p&gt; **Prerequisites**:  * The Sub Account must be a paid account.&lt;br&gt; **Scopes**: &#x60;account:write:admin&#x60; &lt;br&gt; 
  # @param account_id The account ID.
  # @param body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :option 
  # @return [nil]
  describe 'account_settings_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for account_trusted_domain
  # Get Trusted Domains
  # Get trusted domains of a Sub Account. To get the trusted domains of a Master Account, use &#x60;me&#x60; as the value for the &#x60;accountId&#x60; path parameter.  **Prerequisites:**&lt;br&gt; * The Sub Account must be a paid account.&lt;br&gt; **Scope:** &#x60;account:read:admin&#x60;&lt;br&gt; 
  # @param account_id The account ID.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'account_trusted_domain test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for accounts
  # List Sub Accounts
  # List all the Sub Accounts under the Master Account.&lt;br&gt; &lt;aside&gt;Only master accounts can create and have sub accounts. Zoom only assigns this privilege to trusted partners.&lt;/aside&gt;  &lt;br&gt;**Prerequisites:**&lt;br&gt; * Pro or a higher paid account with Master Account option enabled. &lt;br&gt; **Scope**: &#x60;account:read:admin&#x60; &lt;br&gt; 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_size The number of records returned within a single API call.
  # @option opts [Integer] :page_number The current page number of returned records.
  # @return [AccountList]
  describe 'accounts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account_lock_settings
  # Get Locked Settings
  # [Account Locked Settings](https://support.zoom.us/hc/en-us/articles/115005269866) allow you turn settings on or off for all users in your account. No user except the account admin or account owner can change these settings. With lock settings, you force the settings on for all users. Use this API to retrieve an account&#39;s locked settings.&lt;p style&#x3D;\&quot;background-color:#FEEFB3; color:#9F6000\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;force_pmi_jbh_password&lt;/code&gt; field under meeting settings was deprecated on September 22, 2019. Use &lt;code&gt;require_password_for_pmi_meetings&lt;/code&gt; field as an alternative for the same functionality.&lt;/p&gt;  **Prerequisites:** * Pro or a higher paid account with Master Account option enabled. &lt;br&gt; **Scope**: &#x60;account:read:admin&#x60;. &lt;br&gt;     **Scope:** account:read:admin
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20070]
  describe 'get_account_lock_settings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_account_lock_settings
  # Update Locked Settings
  # [Account Locked Settings](https://support.zoom.us/hc/en-us/articles/115005269866) allow you turn settings on or off for all users in your account. No user except the account admin or account owner can change these settings. With lock settings, you force the settings on for all users.   Use this API to update an account&#39;s locked settings.&lt;p style&#x3D;\&quot;background-color:#FEEFB3; color:#9F6000\&quot;&gt;&lt;br&gt;Note:&lt;/b&gt; The &#x60;force_pmi_jbh_password&#x60; field under meeting settings is planned to be deprecated on September 22, 2019. This field will be replaced by another field that will provide the same functionality.&lt;/p&gt;  **Prerequisites:**&lt;br&gt; * Pro or a higher paid account with Master Account option enabled. &lt;br&gt; **Scope:** &#x60;account:write:admin&#x60;&lt;br&gt;  
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Body51] :body 
  # @return [Object]
  describe 'update_account_lock_settings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_account_owner
  # Update the Account Owner
  # The current account owner can [change the owner of an account](https://support.zoom.us/hc/en-us/articles/115005686983-Change-Account-Owner) to another user on the same account.&lt;br&gt; Use this API to change the owner of an account.  **Prerequisites**:&lt;br&gt; * Account owner or admin permissions.&lt;br&gt; * Pro or a higher plan with Master Account option enabled..  **Scopes:**  &#x60;account:write:admin&#x60; or &#x60;account:master&#x60;&lt;br&gt; &lt;br&gt; 
  # @param account_id Account Id of the account.
  # @param [Hash] opts the optional parameters
  # @option opts [Body53] :body 
  # @return [Object]
  describe 'update_account_owner test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
