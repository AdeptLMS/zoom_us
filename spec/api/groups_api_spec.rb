=begin
#Zoom API

#The Zoom API allows developers to safely and securely access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials). All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.

OpenAPI spec version: 2.0.0
Contact: developersupport@zoom.us
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.12

=end

require 'spec_helper'
require 'json'

# Unit tests for ZoomUs::GroupsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'GroupsApi' do
  before do
    # run before each test
    @instance = ZoomUs::GroupsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GroupsApi' do
    it 'should create an instance of GroupsApi' do
      expect(@instance).to be_instance_of(ZoomUs::GroupsApi)
    end
  end

  # unit tests for get_group_lock_settings
  # Get Locked Settings
  # Retrieve a [group&#39;s](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) locked settings. If you lock a setting, the group members will not be able to modify it individually. &lt;p style&#x3D;\&quot;background-color:#FEEFB3; color:#9F6000\&quot;&gt;&lt;br&gt;Note:&lt;/b&gt; The &#x60;force_pmi_jbh_password&#x60; field under meeting settings is planned to be deprecated on September 22, 2019. This field will be replaced by another field that will provide the same functionality.&lt;/p&gt;  **Prerequisite**: Pro, Business, or Education account&lt;br&gt; **Scopes**: &#x60;group:read:admin&#x60;&lt;br&gt;  
  # @param group_id Id of the group.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20069]
  describe 'get_group_lock_settings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_group_settings
  # Get a Group&#39;s Settings
  # Get settings for a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-).  **Prerequisite**: Pro, Business, or Education account&lt;br&gt; **Scopes**: &#x60;group:read:admin&#x60;&lt;br&gt;  
  # @param group_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :option &#x60;meeting_authentication&#x60;: Use this query parameter to view [meeting authentication configuration](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied on the account.&lt;br&gt;&#x60;recording_authentication&#x60;: Use this query parameter to view [recording authentication configuration](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied on the account.
  # @return [Object]
  describe 'get_group_settings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for group
  # Get a Group
  # Get a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under an account.  **Prerequisite**: Pro, Business, or Education account&lt;br&gt; **Scopes**: &#x60;group:read:admin&#x60;&lt;br&gt;  
  # @param group_id The group ID.&lt;br&gt; Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20017]
  describe 'group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for group_create
  # Create a Group
  # Create a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under an account.  **Prerequisite**: Pro or higher account.&lt;br&gt; **Scopes**: &#x60;group:write:admin&#x60;&lt;br&gt;  
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'group_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for group_delete
  # Delete a Group
  # Delete a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-).  **Prerequisite**: Pro, Business, or Education account&lt;br&gt; **Scopes**: &#x60;group:write:admin&#x60;&lt;br&gt;  
  # @param group_id The group ID.&lt;br&gt; Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'group_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for group_locked_settings
  # Update Locked Settings
  # Update a [group&#39;s](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) locked settings. If you lock a setting, the group members will not be able to modify it individually. &lt;p style&#x3D;\&quot;background-color:#FEEFB3; color:#9F6000\&quot;&gt;&lt;br&gt;Note:&lt;/b&gt; The &#x60;force_pmi_jbh_password&#x60; field under meeting settings is planned to be deprecated on September 22, 2019. This field will be replaced by another field that will provide the same functionality.&lt;/p&gt;  **Prerequisite**: Pro, Business, or Education account&lt;br&gt; **Scopes**: &#x60;group:write:admin&#x60;&lt;br&gt;  
  # @param group_id The Id of the group.
  # @param [Hash] opts the optional parameters
  # @option opts [Body50] :body 
  # @return [Object]
  describe 'group_locked_settings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for group_members
  # List Group Members 
  # List the members of a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under your account.  **Prerequisite**: Pro, Business, or Education account&lt;br&gt; **Scopes**: &#x60;group:read:admin&#x60;&lt;br&gt;  
  # @param group_id The group ID.&lt;br&gt; Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_size The number of records returned within a single API call.
  # @option opts [Integer] :page_number The current page number of returned records.
  # @return [InlineResponse20018]
  describe 'group_members test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for group_members_create
  # Add Group Members
  # Add members to a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under your account.  **Prerequisite**: Pro, Business, or Education account&lt;br&gt; **Scopes**: &#x60;group:write:admin&#x60;&lt;br&gt;  
  # @param group_id The group ID.&lt;br&gt; Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'group_members_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for group_members_delete
  # Delete a Group Member
  # Delete a member from a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) in a Zoom account.  **Prerequisite**: Pro, Business, or Education account&lt;br&gt; **Scopes**: &#x60;group:write:admin&#x60;&lt;br&gt;  
  # @param group_id The group ID.&lt;br&gt; Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
  # @param member_id The member ID.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'group_members_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for group_update
  # Update a Group
  # Update a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under your account.  **Prerequisite**: Pro, Business, or Education account&lt;br&gt; **Scopes**: &#x60;group:write:admin&#x60;&lt;br&gt;  
  # @param group_id The group ID.&lt;br&gt; Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'group_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for groups
  # List Groups
  # List [groups](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-) under an account.  **Prerequisite**: Pro or higher account.&lt;br&gt; **Scopes**: &#x60;group:read:admin&#x60;&lt;br&gt;  
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20016]
  describe 'groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_a_group_member
  # Update a Group Member
  # If a user is a member in multiple groups, you can [set a primary group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-#h_d07c7dcd-4fd8-485a-b5fe-a322e8d21c09) for the user. The group member will use the primary group&#39;s settings by default. However, if settings are locked in other groups, those settings will continue to be locked for that user. By default, the primary group is the first group that user is added to.&lt;br&gt;&lt;br&gt; Use this API to perform either of the following tasks: * Simultaneously remove a member from one group and move the member to a different group. * Set a primary group for the user&lt;br&gt;&lt;br&gt; **Prerequisites:**  * Pro or higher account&lt;br&gt; **Scopes:** &#x60;group:write:admin&#x60; 
  # @param group_id Unique Identifier of the group. Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API.&lt;br&gt; To change a member&#39;s primary group, provide the groupId of the member&#39;s current primary group as the value of this field.&lt;br&gt; To remove a member from one group and move the member to another group, provide the groupId of the group from which the member is to be moved.
  # @param member_id Unique Identifier of the group member. Can be retrieved by calling the [List Group Members](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groupmembers) API.
  # @param [Hash] opts the optional parameters
  # @option opts [Body18] :body 
  # @return [Object]
  describe 'update_a_group_member test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_group_settings
  # Update a Group&#39;s Settings
  # Update settings for a [group](https://support.zoom.us/hc/en-us/articles/204519819-Group-Management-).&lt;p style&#x3D;\&quot;background-color:#FEEFB3; color:#9F6000\&quot;&gt;&lt;br&gt;Note:&lt;/b&gt; The &#x60;force_pmi_jbh_password&#x60; field under meeting settings is planned to be deprecated on September 22, 2019. This field will be replaced by another field that will provide the same functionality.&lt;/p&gt; **Prerequisite**: Pro, Business, or Education account&lt;br&gt;  **Scopes**: &#x60;group:write:admin&#x60;&lt;br&gt;  
  # @param group_id Id of the group.
  # @param [Hash] opts the optional parameters
  # @option opts [Object] :body 
  # @option opts [String] :option 
  # @return [nil]
  describe 'update_group_settings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
