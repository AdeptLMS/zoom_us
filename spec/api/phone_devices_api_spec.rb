=begin
#Zoom API

#The Zoom API allows developers to safely and securely access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials). All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.

OpenAPI spec version: 2.0.0
Contact: developersupport@zoom.us
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.12

=end

require 'spec_helper'
require 'json'

# Unit tests for ZoomUs::PhoneDevicesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PhoneDevicesApi' do
  before do
    # run before each test
    @instance = ZoomUs::PhoneDevicesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PhoneDevicesApi' do
    it 'should create an instance of PhoneDevicesApi' do
      expect(@instance).to be_instance_of(ZoomUs::PhoneDevicesApi)
    end
  end

  # unit tests for add_phone_device
  # Add a Device
  # By default, all Zoom Phone users can make and receive calls using the Zoom desktop and mobile applications. Additionally, if a desk phone is required, use this API to [add a desk phone and assign it](https://support.zoom.us/hc/en-us/articles/360021119092#h_5ca07504-68a8-4c3d-ad0e-c1d3594436da) to a user.  **Prerequisites:**&lt;br&gt; * Pro or a higher account with Zoom Phone license * Account owner or admin permissions * [Supported device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)&lt;br&gt; **Scopes:** &#x60;phone:write:admin&#x60;&lt;br&gt;   
  # @param [Hash] opts the optional parameters
  # @option opts [Body62] :body 
  # @return [Object]
  describe 'add_phone_device test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_a_device
  # Delete a Device
  # Remove a [desk phone device](https://support.zoom.us/hc/en-us/articles/360021119092) from the Zoom Phone System Management.&lt;br&gt;&lt;br&gt; **Prerequisites:**&lt;br&gt; * Pro or a higher account with Zoom Phone license * Account owner or admin permissions * Device must not have been assigned to a user.&lt;br&gt; **Scopes:** &#x60;phone:write:admin&#x60;&lt;br&gt;    
  # @param device_id Unique Identifier of the device.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'delete_a_device test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_a_device
  # Get Device Details
  # Get detailed information about a specific [desk phone device](https://support.zoom.us/hc/en-us/articles/360021119092).&lt;br&gt;&lt;br&gt; **Prerequisites:**&lt;br&gt; * Pro or a higher account with Zoom Phone license * Account owner or admin permissions&lt;br&gt; **Scopes:** &#x60;phone:write:admin&#x60;&lt;br&gt;   
  # @param device_id Unique Identifier of the device.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20089]
  describe 'get_a_device test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_phone_devices
  # List Devices
  # List all the [desk phone devices](https://support.zoom.us/hc/en-us/articles/360021119092) that are configured with Zoom Phone on an account. To view devices that have not yet been assigned to a user, set the value of the &#x60;type&#x60; query parameter as &#x60;unassigned&#x60; and to view devices that have been assigned, set the value as &#x60;assigned&#x60;.&lt;br&gt;&lt;br&gt; **Scopes:** &#x60;phone:read:admin&#x60;  &lt;br&gt; **Prerequisites:**&lt;br&gt; * Pro or a higher account with Zoom Phone license * Account owner or admin permissions&lt;br&gt; 
  # @param type State of the device. The value should be either &#x60;assigned&#x60; to list devices that have been assigned to user(s) or &#x60;unassigned&#x60; to list devices that have not yet been assigned to any user in the Zoom account.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :next_page_token The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
  # @option opts [Integer] :page_size The number of records returned within a single API call.
  # @return [InlineResponse20088]
  describe 'list_phone_devices test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_a_device
  # Update a Device
  # Update information of a [desk phone device](https://support.zoom.us/hc/en-us/articles/360021119092).&lt;br&gt;&lt;br&gt; **Prerequisites:**&lt;br&gt; * Pro or a higher account with Zoom Phone license * Account owner or admin permissions&lt;br&gt; **Scopes:** &#x60;phone:write:admin&#x60;&lt;br&gt;    
  # @param device_id Unique Identifier of the Device.
  # @param [Hash] opts the optional parameters
  # @option opts [Body63] :body 
  # @return [Object]
  describe 'update_a_device test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
