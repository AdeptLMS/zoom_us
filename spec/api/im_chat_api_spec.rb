=begin
#Zoom API

#The Zoom API allows developers to safely and securely access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials). All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.

OpenAPI spec version: 2.0.0
Contact: developersupport@zoom.us
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.12

=end

require 'spec_helper'
require 'json'

# Unit tests for ZoomUs::IMChatApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'IMChatApi' do
  before do
    # run before each test
    @instance = ZoomUs::IMChatApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of IMChatApi' do
    it 'should create an instance of IMChatApi' do
      expect(@instance).to be_instance_of(ZoomUs::IMChatApi)
    end
  end

  # unit tests for im_chat_messages
  # Retrieve IM Chat Messages
  # Retrieve IM chat messages for a specified period of time. &lt;aside&gt;Note: This API only supports oauth2.&lt;/aside&gt;&lt;br&gt;&lt;br&gt;  **Scopes:** &#x60;imchat:read&#x60;&lt;br&gt;  &lt;br&gt;  &lt;p style&#x3D;\&quot;background-color:#ffffcc;\&quot;&gt;&lt;strong&gt;API End of Life:&lt;/strong&gt; This API will no longer be supported after April, 2020. &lt;a href&#x3D;\&quot;https://marketplace.zoom.us/docs/deprecated-scopes\&quot;&gt;Learn more&lt;/a&gt;.&lt;/p&gt;&lt;br&gt;
  # @param session_id IM chat session ID.
  # @param from Start date in &#39;yyyy-mm-dd&#39; format. The date range defined by the \&quot;from\&quot; and \&quot;to\&quot; parameters should only be one month as the report includes only one month worth of data at once.
  # @param to End date.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_size The number of records returned within a single API call.
  # @option opts [String] :next_page_token The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
  # @return [InlineResponse20021]
  describe 'im_chat_messages test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for im_chat_sessions
  # Get IM Chat Sessions
  # Retrieve IM Chat sessions for a specified period of time. &lt;aside&gt;Note: This API only supports Oauth2.&lt;/aside&gt;&lt;br&gt;  &lt;p style&#x3D;\&quot;background-color:#ffffcc;\&quot;&gt;&lt;strong&gt;API End of Life:&lt;/strong&gt; This API will no longer be supported after April, 2020. &lt;a href&#x3D;\&quot;https://marketplace.zoom.us/docs/deprecated-scopes\&quot;&gt;Learn more&lt;/a&gt;.&lt;/p&gt;&lt;br&gt;   **Scopes:** &#x60;imchat:read, imchat:read:admin&#x60;&lt;br&gt; 
  # @param from Start date in &#39;yyyy-mm-dd&#39; format. The date range defined by the \&quot;from\&quot; and \&quot;to\&quot; parameters should only be one month as the report includes only one month worth of data at once.
  # @param to End date.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_size The number of records returned within a single API call.
  # @option opts [String] :next_page_token The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
  # @return [InlineResponse20020]
  describe 'im_chat_sessions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for listimmessages
  # Get Userâ€™s IM Messages
  # Get IM Chat messages for a specified period of time. &lt;aside&gt;Note: This API only supports Oauth2.&lt;/aside&gt;&lt;br&gt;&lt;br&gt; **Scopes:** &#x60;imchat:read&#x60; &lt;p style&#x3D;\&quot;background-color:#ffffcc;\&quot;&gt;&lt;strong&gt;API End of Life:&lt;/strong&gt; This API will no longer be supported after April, 2020. &lt;a href&#x3D;\&quot;https://marketplace.zoom.us/docs/deprecated-scopes\&quot;&gt;Learn more&lt;/a&gt;.&lt;/p&gt;&lt;br&gt; 
  # @param user_id The user ID or email address.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :chat_user Chat user&#39;s ID or email address.
  # @option opts [String] :channel IM Channel&#39;s ID.
  # @option opts [String] :date IM message&#39;s query date time, format as yyyy-MM-dd.
  # @option opts [Integer] :page_size The number of records returned within a single API call.
  # @option opts [String] :next_page_token The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
  # @return [InlineResponse20060]
  describe 'listimmessages test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sendimmessages
  # Send IM messages
  # Send chat message to a user. &lt;aside&gt;Note: This API only supports OAuth 2.0.&lt;/aside&gt;&lt;br&gt;&lt;br&gt;**Scope:** &#x60;imchat:write&#x60; &lt;p style&#x3D;\&quot;background-color:#ffffcc;\&quot;&gt;&lt;strong&gt;API End of Life:&lt;/strong&gt; This API will no longer be supported after April, 2020. &lt;a href&#x3D;\&quot;https://marketplace.zoom.us/docs/deprecated-scopes\&quot;&gt;Learn more&lt;/a&gt;.&lt;/p&gt;&lt;br&gt;  
  # @param [Hash] opts the optional parameters
  # @option opts [Body44] :body 
  # @option opts [String] :chat_user The email address (registered with Zoom) or the userId of the chat user.
  # @return [InlineResponse20122]
  describe 'sendimmessages test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
