=begin
#Zoom API

#The Zoom API allows developers to safely and securely access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials). All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.

OpenAPI spec version: 2.0.0
Contact: developersupport@zoom.us
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.12

=end

require 'spec_helper'
require 'json'

# Unit tests for ZoomUs::RoomsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'RoomsApi' do
  before do
    # run before each test
    @instance = ZoomUs::RoomsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RoomsApi' do
    it 'should create an instance of RoomsApi' do
      expect(@instance).to be_instance_of(ZoomUs::RoomsApi)
    end
  end

  # unit tests for add_a_room
  # Add a Zoom Room
  # Use this API to [add a Zoom Room](https://support.zoom.us/hc/en-us/articles/202822279-Add-Zoom-Rooms-on-Web-Portal) to a Zoom account.&lt;br&gt;&lt;br&gt; **Prerequisites:**&lt;br&gt; * Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.&lt;br&gt; **Scopes**: &#x60;room:write:admin&#x60;&lt;br&gt; 
  # @param [Hash] opts the optional parameters
  # @option opts [Body2] :body 
  # @return [InlineResponse201]
  describe 'add_a_room test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for change_zr_location
  # Change a Zoom Room&#39;s Location
  # An account owner of a Zoom account can establish a [Zoom Rooms Location Hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) to better organize Zoom Rooms spread accress various location. The location can be structured in a hierarchy with Country being the top-level location, followed by city, campus, building, and floor. Use this API to assign a new location for a Zoom Room. Note that the Zoom Room can be assigned only to the lowest level location available in the hierarchy. **Prerequisite:**&lt;br&gt; * Account owner or admin permission * Zoom Rooms version 4.0 or higher&lt;br&gt; **Scopes:** &#x60;room:write:admin&#x60;&lt;br&gt; 
  # @param room_id Unique Identifier of the Zoom Room.
  # @param [Hash] opts the optional parameters
  # @option opts [Body64] :body 
  # @return [Object]
  describe 'change_zr_location test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_a_zoom_room
  # Delete a Zoom Room
  # [Remove](https://support.zoom.us/hc/en-us/articles/360033432032-Zoom-Room-Device-Profiles#h_e55b2092-c418-4b02-819f-44de51448900) a specific Zoom Room profile from a Zoom account.&lt;br&gt;&lt;br&gt; **Prerequisites:**&lt;br&gt; * Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.&lt;br&gt; **Scopes**: &#x60;room:write:admin&#x60;&lt;br&gt; 
  # @param room_id Unique Identifier of a Zoom Room.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'delete_a_zoom_room test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_zr_profile
  # Get Zoom Room Profile
  #  Zoom Rooms is a software-based room system that provides an integrated experience for audio conferencing, wireless screen sharing and video conferencing. Use this API to get detailed information on a specific Zoom Room in a Zoom account.  **Prerequisites:**&lt;br&gt; * Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.&lt;br&gt; **Scopes**: &#x60;room:read:admin&#x60;&lt;br&gt; 
  # @param room_id Unique Identifier of the Zoom Room. This can be retrieved from the response of [List Zoom Rooms](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzoomrooms) API.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20080]
  describe 'get_zr_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_zr_settings
  # Get Zoom Room Settings
  # Get information on meeting or alert settings applied to a specific Zoom Room. By default, only **Meeting Settings** are returned. To view only **Alert Settings**, specify &#x60;alert&#x60; as the value of the &#x60;setting_type&#x60; query parameter.&lt;br&gt; **Prerequisites:**&lt;br&gt; * Zoom Room licenses * Owner or Admin privileges on the Zoom Account.&lt;br&gt; **Scopes:** &#x60;room:read:admin&#x60;&lt;br&gt; 
  # @param setting_type The type of setting that you would like to retrieve.&lt;br&gt; &#x60;alert&#x60;: Alert Settings applied on the Zoom Rooms Account.&lt;br&gt; &#x60;meeting&#x60;: Meeting settings of the Zoom Rooms Account.
  # @param room_id Unique identifier of the Zoom Room.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'get_zr_settings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_zoom_rooms
  # List Zoom Rooms
  # Zoom Rooms is a software-based room system that provides an integrated experience for audio conferencing, wireless screen sharing and video conferencing. Use this API to list all the existing [Zoom Rooms](https://support.zoom.us/hc/en-us/articles/207483343-Getting-Started-with-Zoom-Rooms) in a Zoom account.&lt;br&gt;&lt;br&gt; **Prerequisites:**&lt;br&gt; * Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.&lt;br&gt; **Scopes**: &#x60;room:read:admin&#x60;&lt;br&gt; 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :status The status of the Zoom Room.
  # @option opts [String] :type Type of the Zoom Rooms.
  # @option opts [BOOLEAN] :unassigned_rooms Use this query parameter with a value of &#x60;true&#x60; if you would like to see Zoom Rooms in your account that have not been assigned to anyone yet.
  # @option opts [Integer] :page_size The number of records returned within a single API call.
  # @option opts [String] :next_page_token The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
  # @option opts [String] :location_id Parent location ID of the Zoom Room.
  # @return [InlineResponse2002]
  describe 'list_zoom_rooms test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_zr_devices
  # List Zoom Room Devices
  # List information about the devices that are being used for a specific [Zoom Room](https://support.zoom.us/hc/en-us/articles/207483343-Getting-Started-with-Zoom-Rooms) in an account.  **Prerequisites:**&lt;br&gt; * Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.&lt;br&gt; * Account owner or admin permissions. **Scopes**: &#x60;room:read:admin&#x60;&lt;br&gt; 
  # @param room_id Unique Identifier of the Zoom Room. This can be retrieved from the response of [List Zoom Rooms](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzoomrooms) API.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20081]
  describe 'list_zr_devices test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_room_profile
  # Update a Zoom Room Profile
  # Update basic information on a specific Zoom Room in a Zoom account.&lt;br&gt;  **Prerequisites:**&lt;br&gt; * Pro or a higher plan with [Zoom Room](https://zoom.us/zoomrooms) license.&lt;br&gt; **Scopes**: &#x60;room:write:admin&#x60;&lt;br&gt; 
  # @param room_id Unique Identifier of a Zoom Room.
  # @param [Hash] opts the optional parameters
  # @option opts [Body59] :body 
  # @return [Object]
  describe 'update_room_profile test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_zr_settings
  # Update Zoom Room Settings
  # Update either meeting or alert settings applied to a specific Zoom Room. To update **Alert Settings**, specify &#x60;alert&#x60; as the value of the &#x60;setting_type&#x60; query parameter. To update **Meeting Settings**, specify &#x60;meeting&#x60; as the value of the &#x60;setting_type&#x60; query parameter.&lt;br&gt; **Prerequisites:**&lt;br&gt; * Zoom Room licenses * Owner or Admin privileges on the Zoom Account.&lt;br&gt; **Scopes:** &#x60;room:write:admin&#x60;&lt;br&gt; 
  # @param room_id Unique Identifier of the Zoom Room.
  # @param [Hash] opts the optional parameters
  # @option opts [Object] :body 
  # @option opts [String] :setting_type The type of setting that you would like to update.&lt;br&gt; &#x60;alert&#x60;: Alert Settings applied on the Zoom Rooms Account.&lt;br&gt; &#x60;meeting&#x60;: Meeting settings of the Zoom Rooms Account.
  # @return [Object]
  describe 'update_zr_settings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
